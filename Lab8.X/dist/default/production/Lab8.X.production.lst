

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Apr 18 00:52:57 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     0000                     	;# 
   212     0001                     	;# 
   213     0002                     	;# 
   214     0003                     	;# 
   215     0004                     	;# 
   216     0005                     	;# 
   217     0006                     	;# 
   218     0007                     	;# 
   219     0008                     	;# 
   220     0009                     	;# 
   221     000A                     	;# 
   222     000B                     	;# 
   223     000C                     	;# 
   224     000D                     	;# 
   225     000E                     	;# 
   226     000E                     	;# 
   227     000F                     	;# 
   228     0010                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0013                     	;# 
   232     0014                     	;# 
   233     0015                     	;# 
   234     0015                     	;# 
   235     0016                     	;# 
   236     0017                     	;# 
   237     0018                     	;# 
   238     0019                     	;# 
   239     001A                     	;# 
   240     001B                     	;# 
   241     001B                     	;# 
   242     001C                     	;# 
   243     001D                     	;# 
   244     001E                     	;# 
   245     001F                     	;# 
   246     0081                     	;# 
   247     0085                     	;# 
   248     0086                     	;# 
   249     0087                     	;# 
   250     0088                     	;# 
   251     0089                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     008E                     	;# 
   255     008F                     	;# 
   256     0090                     	;# 
   257     0091                     	;# 
   258     0092                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0094                     	;# 
   263     0095                     	;# 
   264     0096                     	;# 
   265     0097                     	;# 
   266     0098                     	;# 
   267     0099                     	;# 
   268     009A                     	;# 
   269     009B                     	;# 
   270     009C                     	;# 
   271     009D                     	;# 
   272     009E                     	;# 
   273     009F                     	;# 
   274     0105                     	;# 
   275     0107                     	;# 
   276     0108                     	;# 
   277     0109                     	;# 
   278     010C                     	;# 
   279     010C                     	;# 
   280     010D                     	;# 
   281     010E                     	;# 
   282     010F                     	;# 
   283     0185                     	;# 
   284     0187                     	;# 
   285     0188                     	;# 
   286     0189                     	;# 
   287     018C                     	;# 
   288     018D                     	;# 
   289                           
   290                           	psect	strings
   291     0003                     __pstrings:
   292     0003                     stringtab:
   293     0003                     __stringtab:
   294     0003                     stringcode:	
   295                           ;	String table - string pointers are 1 byte each
   296                           
   297     0003                     stringdir:
   298     0003  3000               	movlw	high stringdir
   299     0004  008A               	movwf	10
   300     0005  0804               	movf	4,w
   301     0006  0A84               	incf	4,f
   302     0007  0782               	addwf	2,f
   303     0008                     __stringbase:
   304     0008  3400               	retlw	0
   305     0009                     __end_of__stringtab:
   306     0009                     _message:
   307     0009  3450               	retlw	80
   308     000A  3449               	retlw	73
   309     000B  3443               	retlw	67
   310     000C  3431               	retlw	49
   311     000D  3436               	retlw	54
   312     000E  3446               	retlw	70
   313     000F  3438               	retlw	56
   314     0010  3438               	retlw	56
   315     0011  3437               	retlw	55
   316     0012  3420               	retlw	32
   317     0013  346D               	retlw	109
   318     0014  3469               	retlw	105
   319     0015  3463               	retlw	99
   320     0016  3472               	retlw	114
   321     0017  346F               	retlw	111
   322     0018  3463               	retlw	99
   323     0019  346F               	retlw	111
   324     001A  346E               	retlw	110
   325     001B  3474               	retlw	116
   326     001C  3472               	retlw	114
   327     001D  346F               	retlw	111
   328     001E  346C               	retlw	108
   329     001F  346C               	retlw	108
   330     0020  3465               	retlw	101
   331     0021  3472               	retlw	114
   332     0022  3420               	retlw	32
   333     0023  3455               	retlw	85
   334     0024  3441               	retlw	65
   335     0025  3452               	retlw	82
   336     0026  3454               	retlw	84
   337     0027  3420               	retlw	32
   338     0028  3465               	retlw	101
   339     0029  3478               	retlw	120
   340     002A  3461               	retlw	97
   341     002B  346D               	retlw	109
   342     002C  3470               	retlw	112
   343     002D  346C               	retlw	108
   344     002E  3465               	retlw	101
   345     002F  3400               	retlw	0
   346     0030                     __end_of_message:
   347     0019                     _TXREG	set	25
   348     0018                     _RCSTA	set	24
   349     001A                     _RCREG	set	26
   350     0018                     _RCSTAbits	set	24
   351     000C                     _PIR1bits	set	12
   352     00C4                     _CREN	set	196
   353     00C1                     _OERR	set	193
   354     0065                     _RCIF	set	101
   355     0098                     _TXSTA	set	152
   356     0099                     _SPBRG	set	153
   357     008F                     _OSCCON	set	143
   358     04C1                     _TRMT	set	1217
   359     0030                     STR_1:
   360     0030  3448               	retlw	72	;'H'
   361     0031  3465               	retlw	101	;'e'
   362     0032  346C               	retlw	108	;'l'
   363     0033  346C               	retlw	108	;'l'
   364     0034  346F               	retlw	111	;'o'
   365     0035  3420               	retlw	32	;' '
   366     0036  3477               	retlw	119	;'w'
   367     0037  346F               	retlw	111	;'o'
   368     0038  3472               	retlw	114	;'r'
   369     0039  346C               	retlw	108	;'l'
   370     003A  3464               	retlw	100	;'d'
   371     003B  3421               	retlw	33	;'!'
   372     003C  340D               	retlw	13
   373     003D  340A               	retlw	10
   374     003E  3400               	retlw	0
   375     003F                     STR_3:
   376     003F  3448               	retlw	72	;'H'
   377     0040  346F               	retlw	111	;'o'
   378     0041  346C               	retlw	108	;'l'
   379     0042  3461               	retlw	97	;'a'
   380     0043  340D               	retlw	13
   381     0044  340A               	retlw	10
   382     0045  3400               	retlw	0
   383     003C                     
   384                           	psect	cinit
   385     07FC                     start_initialization:	
   386                           ; #config settings
   387                           
   388     07FC                     __initialization:
   389     07FC                     end_of_initialization:	
   390                           ;End of C runtime variable initialization code
   391                           
   392     07FC                     __end_of__initialization:
   393     07FC  0183               	clrf	3
   394     07FD  120A  118A  2EDA   	ljmp	_main	;jump to C main() function
   395                           
   396                           	psect	cstackCOMMON
   397     0070                     __pcstackCOMMON:
   398     0070                     ?_UART_Data_Ready:
   399     0070                     ?_UART_Print:	
   400                           ; 1 bit 
   401                           
   402     0070                     ??_UART_Data_Ready:	
   403                           ; 1 bytes @ 0x0
   404                           
   405     0070                     ?_UART_GetC:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0070                     ??_UART_GetC:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ?_UART_PutC:	
   412                           ; 1 bytes @ 0x0
   413                           
   414     0070                     ??_UART_PutC:	
   415                           ; 1 bytes @ 0x0
   416                           
   417     0070                     ?_uart_read:	
   418                           ; 1 bytes @ 0x0
   419                           
   420     0070                     ??_uart_read:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0070                     ?_main:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0070                     ?___lldiv:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     UART_PutC@data:	
   430                           ; 4 bytes @ 0x0
   431                           
   432     0070                     ___lldiv@divisor:	
   433                           ; 1 bytes @ 0x0
   434                           
   435                           
   436                           ; 4 bytes @ 0x0
   437     0070                     	ds	1
   438     0071                     ??_UART_Print:
   439                           
   440                           ; 1 bytes @ 0x1
   441     0071                     	ds	1
   442     0072                     UART_Print@i:
   443                           
   444                           ; 1 bytes @ 0x2
   445     0072                     	ds	1
   446     0073                     UART_Print@data:
   447                           
   448                           ; 1 bytes @ 0x3
   449     0073                     	ds	1
   450     0074                     ___lldiv@dividend:
   451                           
   452                           ; 4 bytes @ 0x4
   453     0074                     	ds	4
   454     0078                     ??___lldiv:
   455                           
   456                           ; 1 bytes @ 0x8
   457     0078                     	ds	1
   458     0079                     ___lldiv@quotient:
   459                           
   460                           ; 4 bytes @ 0x9
   461     0079                     	ds	4
   462     007D                     ___lldiv@counter:
   463                           
   464                           ; 1 bytes @ 0xD
   465     007D                     	ds	1
   466                           
   467                           	psect	cstackBANK0
   468     0020                     __pcstackBANK0:
   469     0020                     ?_UART_Init:
   470     0020                     UART_Init@baud_rate:	
   471                           ; 1 bytes @ 0x0
   472                           
   473                           
   474                           ; 4 bytes @ 0x0
   475     0020                     	ds	4
   476     0024                     ??_UART_Init:
   477                           
   478                           ; 1 bytes @ 0x4
   479     0024                     	ds	4
   480     0028                     UART_Init@n:
   481                           
   482                           ; 2 bytes @ 0x8
   483     0028                     	ds	2
   484     002A                     ??_main:
   485                           
   486                           ; 1 bytes @ 0xA
   487     002A                     	ds	3
   488     002D                     main@datos:
   489                           
   490                           ; 1 bytes @ 0xD
   491     002D                     	ds	1
   492     002E                     main@c:
   493                           
   494                           ; 1 bytes @ 0xE
   495     002E                     	ds	1
   496                           
   497                           	psect	maintext
   498     06DA                     __pmaintext:	
   499 ;;
   500 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   501 ;;
   502 ;; *************** function _main *****************
   503 ;; Defined at:
   504 ;;		line 52 in file "Prelab_8.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;  c               1   14[BANK0 ] unsigned char 
   509 ;;  datos           1   13[BANK0 ] unsigned char 
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : B00/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   519 ;;      Params:         0       0       0       0       0
   520 ;;      Locals:         0       2       0       0       0
   521 ;;      Temps:          0       3       0       0       0
   522 ;;      Totals:         0       5       0       0       0
   523 ;;Total ram usage:        5 bytes
   524 ;; Hardware stack levels required when called: 2
   525 ;; This function calls:
   526 ;;		_UART_Data_Ready
   527 ;;		_UART_GetC
   528 ;;		_UART_Init
   529 ;;		_UART_Print
   530 ;;		_UART_PutC
   531 ;;		_uart_read
   532 ;; This function is called by:
   533 ;;		Startup code after reset
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537     06DA                     _main:	
   538                           ;psect for function _main
   539                           
   540     06DA                     l883:	
   541                           ;incstack = 0
   542                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   543                           
   544                           
   545                           ;Prelab_8.c: 54:   OSCCON = 0x70;
   546     06DA  3070               	movlw	112
   547     06DB  1683               	bsf	3,5	;RP0=1, select bank1
   548     06DC  1303               	bcf	3,6	;RP1=0, select bank1
   549     06DD  008F               	movwf	15	;volatile
   550     06DE                     l885:
   551                           
   552                           ;Prelab_8.c: 56:   UART_Init(9600);
   553     06DE  3000               	movlw	0
   554     06DF  1283               	bcf	3,5	;RP0=0, select bank0
   555     06E0  1303               	bcf	3,6	;RP1=0, select bank0
   556     06E1  00A3               	movwf	UART_Init@baud_rate+3
   557     06E2  3000               	movlw	0
   558     06E3  00A2               	movwf	UART_Init@baud_rate+2
   559     06E4  3025               	movlw	37
   560     06E5  00A1               	movwf	UART_Init@baud_rate+1
   561     06E6  3080               	movlw	128
   562     06E7  00A0               	movwf	UART_Init@baud_rate
   563     06E8  120A  118A  275C  120A  118A  	fcall	_UART_Init
   564     06ED                     l887:
   565                           
   566                           ;Prelab_8.c: 58:   _delay((unsigned long)((2000)*(8000000/4000.0)));
   567     06ED  3015               	movlw	21
   568     06EE  1283               	bcf	3,5	;RP0=0, select bank0
   569     06EF  1303               	bcf	3,6	;RP1=0, select bank0
   570     06F0  00AC               	movwf	??_main+2
   571     06F1  304B               	movlw	75
   572     06F2  00AB               	movwf	??_main+1
   573     06F3  30BD               	movlw	189
   574     06F4  00AA               	movwf	??_main
   575     06F5                     u437:
   576     06F5  0BAA               	decfsz	??_main,f
   577     06F6  2EF5               	goto	u437
   578     06F7  0BAB               	decfsz	??_main+1,f
   579     06F8  2EF5               	goto	u437
   580     06F9  0BAC               	decfsz	??_main+2,f
   581     06FA  2EF5               	goto	u437
   582     06FB  2EFC               	nop2
   583     06FC                     l889:
   584                           
   585                           ;Prelab_8.c: 60:   UART_Print("Hello world!\r\n");
   586     06FC  3028               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   587     06FD  120A  118A  2652  120A  118A  	fcall	_UART_Print
   588     0702                     l891:
   589                           
   590                           ;Prelab_8.c: 62:   _delay((unsigned long)((1000)*(8000000/4000.0)));
   591     0702  300B               	movlw	11
   592     0703  1283               	bcf	3,5	;RP0=0, select bank0
   593     0704  1303               	bcf	3,6	;RP1=0, select bank0
   594     0705  00AC               	movwf	??_main+2
   595     0706  3026               	movlw	38
   596     0707  00AB               	movwf	??_main+1
   597     0708  305D               	movlw	93
   598     0709  00AA               	movwf	??_main
   599     070A                     u447:
   600     070A  0BAA               	decfsz	??_main,f
   601     070B  2F0A               	goto	u447
   602     070C  0BAB               	decfsz	??_main+1,f
   603     070D  2F0A               	goto	u447
   604     070E  0BAC               	decfsz	??_main+2,f
   605     070F  2F0A               	goto	u447
   606     0710                     l893:
   607                           
   608                           ;Prelab_8.c: 64:   UART_Print(message);
   609     0710  3001               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
   610     0711  120A  118A  2652  120A  118A  	fcall	_UART_Print
   611     0716                     l895:
   612                           
   613                           ;Prelab_8.c: 66:   _delay((unsigned long)((1000)*(8000000/4000.0)));
   614     0716  300B               	movlw	11
   615     0717  1283               	bcf	3,5	;RP0=0, select bank0
   616     0718  1303               	bcf	3,6	;RP1=0, select bank0
   617     0719  00AC               	movwf	??_main+2
   618     071A  3026               	movlw	38
   619     071B  00AB               	movwf	??_main+1
   620     071C  305D               	movlw	93
   621     071D  00AA               	movwf	??_main
   622     071E                     u457:
   623     071E  0BAA               	decfsz	??_main,f
   624     071F  2F1E               	goto	u457
   625     0720  0BAB               	decfsz	??_main+1,f
   626     0721  2F1E               	goto	u457
   627     0722  0BAC               	decfsz	??_main+2,f
   628     0723  2F1E               	goto	u457
   629     0724                     l897:
   630                           
   631                           ;Prelab_8.c: 68:   UART_Print("\r\n");
   632     0724  3034               	movlw	(low (((STR_1+12)-__stringbase)| (0+32768)))& (0+255)
   633     0725  120A  118A  2652  120A  118A  	fcall	_UART_Print
   634     072A                     l899:
   635                           
   636                           ;Prelab_8.c: 71:   {;Prelab_8.c: 73:       char datos = uart_read();
   637     072A  120A  118A  263F  120A  118A  	fcall	_uart_read
   638     072F  1283               	bcf	3,5	;RP0=0, select bank0
   639     0730  1303               	bcf	3,6	;RP1=0, select bank0
   640     0731  00AD               	movwf	main@datos
   641     0732                     l901:
   642                           
   643                           ;Prelab_8.c: 74:       if (datos == '1'){
   644     0732  3031               	movlw	49
   645     0733  062D               	xorwf	main@datos,w
   646     0734  1D03               	btfss	3,2
   647     0735  2F37               	goto	u411
   648     0736  2F38               	goto	u410
   649     0737                     u411:
   650     0737  2F41               	goto	l907
   651     0738                     u410:
   652     0738                     l903:
   653                           
   654                           ;Prelab_8.c: 75:           UART_Print("Hola\r\n");
   655     0738  3037               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   656     0739  120A  118A  2652  120A  118A  	fcall	_UART_Print
   657     073E                     l905:
   658                           
   659                           ;Prelab_8.c: 76:           RCSTAbits.CREN =0;
   660     073E  1283               	bcf	3,5	;RP0=0, select bank0
   661     073F  1303               	bcf	3,6	;RP1=0, select bank0
   662     0740  1218               	bcf	24,4	;volatile
   663     0741                     l907:
   664                           
   665                           ;Prelab_8.c: 79:     if ( UART_Data_Ready() )
   666     0741  120A  118A  261B  120A  118A  	fcall	_UART_Data_Ready
   667     0746  1C03               	btfss	3,0
   668     0747  2F49               	goto	u421
   669     0748  2F4A               	goto	u420
   670     0749                     u421:
   671     0749  2F2A               	goto	l899
   672     074A                     u420:
   673     074A                     l909:
   674                           
   675                           ;Prelab_8.c: 80:     {;Prelab_8.c: 81:       uint8_t c = UART_GetC();
   676     074A  120A  118A  2631  120A  118A  	fcall	_UART_GetC
   677     074F  1283               	bcf	3,5	;RP0=0, select bank0
   678     0750  1303               	bcf	3,6	;RP1=0, select bank0
   679     0751  00AE               	movwf	main@c
   680     0752                     l911:
   681                           
   682                           ;Prelab_8.c: 82:       UART_PutC(c);
   683     0752  082E               	movf	main@c,w
   684     0753  120A  118A  2625  120A  118A  	fcall	_UART_PutC
   685     0758  2F2A               	goto	l899
   686     0759  120A  118A  2800   	ljmp	start
   687     075C                     __end_of_main:
   688                           
   689                           	psect	text1
   690     063F                     __ptext1:	
   691 ;; *************** function _uart_read *****************
   692 ;; Defined at:
   693 ;;		line 39 in file "Prelab_8.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      unsigned char 
   700 ;; Registers used:
   701 ;;		wreg
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   707 ;;      Params:         0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0
   710 ;;      Totals:         0       0       0       0       0
   711 ;;Total ram usage:        0 bytes
   712 ;; Hardware stack levels used: 1
   713 ;; This function calls:
   714 ;;		Nothing
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720     063F                     _uart_read:	
   721                           ;psect for function _uart_read
   722                           
   723     063F                     l827:	
   724                           ;incstack = 0
   725                           ; Regs used in _uart_read: [wreg]
   726                           
   727                           
   728                           ;Prelab_8.c: 40:  if(PIR1bits.RCIF== 0){
   729     063F  1283               	bcf	3,5	;RP0=0, select bank0
   730     0640  1303               	bcf	3,6	;RP1=0, select bank0
   731     0641  1A8C               	btfsc	12,5	;volatile
   732     0642  2E44               	goto	u301
   733     0643  2E45               	goto	u300
   734     0644                     u301:
   735     0644  2E50               	goto	l839
   736     0645                     u300:
   737     0645                     l829:
   738                           
   739                           ;Prelab_8.c: 41:      if (RCSTAbits.OERR){
   740     0645  1C98               	btfss	24,1	;volatile
   741     0646  2E48               	goto	u311
   742     0647  2E49               	goto	u310
   743     0648                     u311:
   744     0648  2E4E               	goto	l833
   745     0649                     u310:
   746     0649                     l831:
   747                           
   748                           ;Prelab_8.c: 42:          RCSTAbits.CREN =0;
   749     0649  1218               	bcf	24,4	;volatile
   750                           
   751                           ;Prelab_8.c: 43:          __nop();
   752     064A  0000               	nop
   753                           
   754                           ;Prelab_8.c: 44:          RCSTAbits.CREN =1;
   755     064B  1283               	bcf	3,5	;RP0=0, select bank0
   756     064C  1303               	bcf	3,6	;RP1=0, select bank0
   757     064D  1618               	bsf	24,4	;volatile
   758     064E                     l833:
   759                           
   760                           ;Prelab_8.c: 46:      return RCREG;
   761     064E  081A               	movf	26,w	;volatile
   762     064F  2E51               	goto	l29
   763     0650                     l839:
   764                           
   765                           ;Prelab_8.c: 49:      return 0;
   766     0650  3000               	movlw	0
   767     0651                     l29:
   768     0651  0008               	return
   769     0652                     __end_of_uart_read:
   770                           
   771                           	psect	text2
   772     0652                     __ptext2:	
   773 ;; *************** function _UART_Print *****************
   774 ;; Defined at:
   775 ;;		line 65 in file "USARTmodl.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  data            1    wreg     PTR const unsigned char 
   778 ;;		 -> STR_3(7), STR_2(3), message(39), STR_1(15), 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  data            1    3[COMMON] PTR const unsigned char 
   781 ;;		 -> STR_3(7), STR_2(3), message(39), STR_1(15), 
   782 ;;  i               1    2[COMMON] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       0       0       0       0
   793 ;;      Locals:         2       0       0       0       0
   794 ;;      Temps:          1       0       0       0       0
   795 ;;      Totals:         3       0       0       0       0
   796 ;;Total ram usage:        3 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; Hardware stack levels required when called: 1
   799 ;; This function calls:
   800 ;;		_UART_PutC
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806     0652                     _UART_Print:	
   807                           ;psect for function _UART_Print
   808                           
   809                           
   810                           ;incstack = 0
   811                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   812                           ;UART_Print@data stored from wreg
   813     0652  00F3               	movwf	UART_Print@data
   814     0653                     l859:
   815                           
   816                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
   817     0653  01F2               	clrf	UART_Print@i
   818                           
   819                           ;USARTmodl.c: 68:   while (data[i] != '\0')
   820     0654  2E66               	goto	l865
   821     0655                     l861:
   822                           
   823                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
   824     0655  0872               	movf	UART_Print@i,w
   825     0656  0773               	addwf	UART_Print@data,w
   826     0657  0084               	movwf	4
   827     0658  120A  118A  2003  120A  118A  	fcall	stringdir
   828     065D  120A  118A  2625  120A  118A  	fcall	_UART_PutC
   829     0662                     l863:
   830     0662  3001               	movlw	1
   831     0663  00F1               	movwf	??_UART_Print
   832     0664  0871               	movf	??_UART_Print,w
   833     0665  07F2               	addwf	UART_Print@i,f
   834     0666                     l865:
   835                           
   836                           ;USARTmodl.c: 68:   while (data[i] != '\0')
   837     0666  0872               	movf	UART_Print@i,w
   838     0667  0773               	addwf	UART_Print@data,w
   839     0668  0084               	movwf	4
   840     0669  120A  118A  2003  120A  118A  	fcall	stringdir
   841     066E  3A00               	xorlw	0
   842     066F  1D03               	skipz
   843     0670  2E72               	goto	u371
   844     0671  2E73               	goto	u370
   845     0672                     u371:
   846     0672  2E55               	goto	l861
   847     0673                     u370:
   848     0673                     l93:
   849     0673  0008               	return
   850     0674                     __end_of_UART_Print:
   851                           
   852                           	psect	text3
   853     0625                     __ptext3:	
   854 ;; *************** function _UART_PutC *****************
   855 ;; Defined at:
   856 ;;		line 59 in file "USARTmodl.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  data            1    wreg     const unsigned char 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  data            1    0[COMMON] const unsigned char 
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         1       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0
   873 ;;      Totals:         1       0       0       0       0
   874 ;;Total ram usage:        1 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_main
   880 ;;		_UART_Print
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884     0625                     _UART_PutC:	
   885                           ;psect for function _UART_PutC
   886                           
   887                           
   888                           ;incstack = 0
   889                           ; Regs used in _UART_PutC: [wreg]
   890                           ;UART_PutC@data stored from wreg
   891     0625  00F0               	movwf	UART_PutC@data
   892     0626                     l799:
   893     0626                     l84:	
   894                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
   895                           
   896     0626  1683               	bsf	3,5	;RP0=1, select bank1
   897     0627  1303               	bcf	3,6	;RP1=0, select bank1
   898     0628  1C98               	btfss	24,1	;volatile
   899     0629  2E2B               	goto	u221
   900     062A  2E2C               	goto	u220
   901     062B                     u221:
   902     062B  2E26               	goto	l84
   903     062C                     u220:
   904     062C                     l801:
   905                           
   906                           ;USARTmodl.c: 62:   TXREG = data;
   907     062C  0870               	movf	UART_PutC@data,w
   908     062D  1283               	bcf	3,5	;RP0=0, select bank0
   909     062E  1303               	bcf	3,6	;RP1=0, select bank0
   910     062F  0099               	movwf	25	;volatile
   911     0630                     l87:
   912     0630  0008               	return
   913     0631                     __end_of_UART_PutC:
   914                           
   915                           	psect	text4
   916     075C                     __ptext4:	
   917 ;; *************** function _UART_Init *****************
   918 ;; Defined at:
   919 ;;		line 14 in file "USARTmodl.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  baud_rate       4    0[BANK0 ] const unsigned long 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  n               2    8[BANK0 ] int 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       4       0       0       0
   934 ;;      Locals:         0       2       0       0       0
   935 ;;      Temps:          0       4       0       0       0
   936 ;;      Totals:         0      10       0       0       0
   937 ;;Total ram usage:       10 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; Hardware stack levels required when called: 1
   940 ;; This function calls:
   941 ;;		___lldiv
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947     075C                     _UART_Init:	
   948                           ;psect for function _UART_Init
   949                           
   950     075C                     l843:	
   951                           ;incstack = 0
   952                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   953                           
   954                           
   955                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
   956     075C  1283               	bcf	3,5	;RP0=0, select bank0
   957     075D  1303               	bcf	3,6	;RP1=0, select bank0
   958     075E  0820               	movf	UART_Init@baud_rate,w
   959     075F  00A4               	movwf	??_UART_Init
   960     0760  0821               	movf	UART_Init@baud_rate+1,w
   961     0761  00A5               	movwf	??_UART_Init+1
   962     0762  0822               	movf	UART_Init@baud_rate+2,w
   963     0763  00A6               	movwf	??_UART_Init+2
   964     0764  0823               	movf	UART_Init@baud_rate+3,w
   965     0765  00A7               	movwf	??_UART_Init+3
   966     0766  3004               	movlw	4
   967     0767                     u325:
   968     0767  1003               	clrc
   969     0768  0DA4               	rlf	??_UART_Init,f
   970     0769  0DA5               	rlf	??_UART_Init+1,f
   971     076A  0DA6               	rlf	??_UART_Init+2,f
   972     076B  0DA7               	rlf	??_UART_Init+3,f
   973     076C                     u320:
   974     076C  3EFF               	addlw	-1
   975     076D  1D03               	skipz
   976     076E  2F67               	goto	u325
   977     076F  0827               	movf	??_UART_Init+3,w
   978     0770  00F3               	movwf	___lldiv@divisor+3
   979     0771  0826               	movf	??_UART_Init+2,w
   980     0772  00F2               	movwf	___lldiv@divisor+2
   981     0773  0825               	movf	??_UART_Init+1,w
   982     0774  00F1               	movwf	___lldiv@divisor+1
   983     0775  0824               	movf	??_UART_Init,w
   984     0776  00F0               	movwf	___lldiv@divisor
   985     0777  3000               	movlw	0
   986     0778  00F7               	movwf	___lldiv@dividend+3
   987     0779  307A               	movlw	122
   988     077A  00F6               	movwf	___lldiv@dividend+2
   989     077B  3012               	movlw	18
   990     077C  00F5               	movwf	___lldiv@dividend+1
   991     077D  3000               	movlw	0
   992     077E  00F4               	movwf	___lldiv@dividend
   993     077F  120A  118A  2674  120A  118A  	fcall	___lldiv
   994     0784  0870               	movf	?___lldiv,w
   995     0785  3EFF               	addlw	255
   996     0786  1283               	bcf	3,5	;RP0=0, select bank0
   997     0787  1303               	bcf	3,6	;RP1=0, select bank0
   998     0788  00A8               	movwf	UART_Init@n
   999     0789  0871               	movf	?___lldiv+1,w
  1000     078A  1803               	skipnc
  1001     078B  3E01               	addlw	1
  1002     078C  3EFF               	addlw	255
  1003     078D  00A9               	movwf	UART_Init@n+1
  1004     078E                     l845:
  1005                           
  1006                           ;USARTmodl.c: 18:   if (n < 0)
  1007     078E  1FA9               	btfss	UART_Init@n+1,7
  1008     078F  2F91               	goto	u331
  1009     0790  2F92               	goto	u330
  1010     0791                     u331:
  1011     0791  2F94               	goto	l849
  1012     0792                     u330:
  1013     0792                     l847:
  1014                           
  1015                           ;USARTmodl.c: 19:     n = 0;
  1016     0792  01A8               	clrf	UART_Init@n
  1017     0793  01A9               	clrf	UART_Init@n+1
  1018     0794                     l849:
  1019                           
  1020                           ;USARTmodl.c: 21:   if (n > 255)
  1021     0794  0829               	movf	UART_Init@n+1,w
  1022     0795  3A80               	xorlw	128
  1023     0796  00FF               	movwf	btemp+1
  1024     0797  3081               	movlw	129
  1025     0798  027F               	subwf	btemp+1,w
  1026     0799  1D03               	skipz
  1027     079A  2F9D               	goto	u345
  1028     079B  3000               	movlw	0
  1029     079C  0228               	subwf	UART_Init@n,w
  1030     079D                     u345:
  1031     079D  1C03               	skipc
  1032     079E  2FA0               	goto	u341
  1033     079F  2FA1               	goto	u340
  1034     07A0                     u341:
  1035     07A0  2FEF               	goto	l857
  1036     07A1                     u340:
  1037     07A1                     l851:
  1038                           
  1039                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  1040     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1041     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1042     07A3  0820               	movf	UART_Init@baud_rate,w
  1043     07A4  00A4               	movwf	??_UART_Init
  1044     07A5  0821               	movf	UART_Init@baud_rate+1,w
  1045     07A6  00A5               	movwf	??_UART_Init+1
  1046     07A7  0822               	movf	UART_Init@baud_rate+2,w
  1047     07A8  00A6               	movwf	??_UART_Init+2
  1048     07A9  0823               	movf	UART_Init@baud_rate+3,w
  1049     07AA  00A7               	movwf	??_UART_Init+3
  1050     07AB  3006               	movlw	6
  1051     07AC                     u355:
  1052     07AC  1003               	clrc
  1053     07AD  0DA4               	rlf	??_UART_Init,f
  1054     07AE  0DA5               	rlf	??_UART_Init+1,f
  1055     07AF  0DA6               	rlf	??_UART_Init+2,f
  1056     07B0  0DA7               	rlf	??_UART_Init+3,f
  1057     07B1                     u350:
  1058     07B1  3EFF               	addlw	-1
  1059     07B2  1D03               	skipz
  1060     07B3  2FAC               	goto	u355
  1061     07B4  0827               	movf	??_UART_Init+3,w
  1062     07B5  00F3               	movwf	___lldiv@divisor+3
  1063     07B6  0826               	movf	??_UART_Init+2,w
  1064     07B7  00F2               	movwf	___lldiv@divisor+2
  1065     07B8  0825               	movf	??_UART_Init+1,w
  1066     07B9  00F1               	movwf	___lldiv@divisor+1
  1067     07BA  0824               	movf	??_UART_Init,w
  1068     07BB  00F0               	movwf	___lldiv@divisor
  1069     07BC  3000               	movlw	0
  1070     07BD  00F7               	movwf	___lldiv@dividend+3
  1071     07BE  307A               	movlw	122
  1072     07BF  00F6               	movwf	___lldiv@dividend+2
  1073     07C0  3012               	movlw	18
  1074     07C1  00F5               	movwf	___lldiv@dividend+1
  1075     07C2  3000               	movlw	0
  1076     07C3  00F4               	movwf	___lldiv@dividend
  1077     07C4  120A  118A  2674  120A  118A  	fcall	___lldiv
  1078     07C9  0870               	movf	?___lldiv,w
  1079     07CA  3EFF               	addlw	255
  1080     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1081     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1082     07CD  00A8               	movwf	UART_Init@n
  1083     07CE  0871               	movf	?___lldiv+1,w
  1084     07CF  1803               	skipnc
  1085     07D0  3E01               	addlw	1
  1086     07D1  3EFF               	addlw	255
  1087     07D2  00A9               	movwf	UART_Init@n+1
  1088     07D3                     l853:
  1089                           
  1090                           ;USARTmodl.c: 24:     if (n > 255)
  1091     07D3  0829               	movf	UART_Init@n+1,w
  1092     07D4  3A80               	xorlw	128
  1093     07D5  00FF               	movwf	btemp+1
  1094     07D6  3081               	movlw	129
  1095     07D7  027F               	subwf	btemp+1,w
  1096     07D8  1D03               	skipz
  1097     07D9  2FDC               	goto	u365
  1098     07DA  3000               	movlw	0
  1099     07DB  0228               	subwf	UART_Init@n,w
  1100     07DC                     u365:
  1101     07DC  1C03               	skipc
  1102     07DD  2FDF               	goto	u361
  1103     07DE  2FE0               	goto	u360
  1104     07DF                     u361:
  1105     07DF  2FE6               	goto	l65
  1106     07E0                     u360:
  1107     07E0                     l855:
  1108                           
  1109                           ;USARTmodl.c: 25:       n = 255;
  1110     07E0  30FF               	movlw	255
  1111     07E1  1283               	bcf	3,5	;RP0=0, select bank0
  1112     07E2  1303               	bcf	3,6	;RP1=0, select bank0
  1113     07E3  00A8               	movwf	UART_Init@n
  1114     07E4  3000               	movlw	0
  1115     07E5  00A9               	movwf	UART_Init@n+1
  1116     07E6                     l65:
  1117                           
  1118                           ;USARTmodl.c: 26:     SPBRG = n;
  1119     07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1120     07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1121     07E8  0828               	movf	UART_Init@n,w
  1122     07E9  1683               	bsf	3,5	;RP0=1, select bank1
  1123     07EA  1303               	bcf	3,6	;RP1=0, select bank1
  1124     07EB  0099               	movwf	25	;volatile
  1125                           
  1126                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  1127     07EC  3020               	movlw	32
  1128     07ED  0098               	movwf	24	;volatile
  1129                           
  1130                           ;USARTmodl.c: 28:   }
  1131     07EE  2FF7               	goto	l66
  1132     07EF                     l857:
  1133                           
  1134                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  1135     07EF  1283               	bcf	3,5	;RP0=0, select bank0
  1136     07F0  1303               	bcf	3,6	;RP1=0, select bank0
  1137     07F1  0828               	movf	UART_Init@n,w
  1138     07F2  1683               	bsf	3,5	;RP0=1, select bank1
  1139     07F3  1303               	bcf	3,6	;RP1=0, select bank1
  1140     07F4  0099               	movwf	25	;volatile
  1141                           
  1142                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  1143     07F5  3024               	movlw	36
  1144     07F6  0098               	movwf	24	;volatile
  1145     07F7                     l66:	
  1146                           ;USARTmodl.c: 34:   }
  1147                           
  1148                           
  1149                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  1150     07F7  3090               	movlw	144
  1151     07F8  1283               	bcf	3,5	;RP0=0, select bank0
  1152     07F9  1303               	bcf	3,6	;RP1=0, select bank0
  1153     07FA  0098               	movwf	24	;volatile
  1154     07FB                     l67:
  1155     07FB  0008               	return
  1156     07FC                     __end_of_UART_Init:
  1157                           
  1158                           	psect	text5
  1159     0674                     __ptext5:	
  1160 ;; *************** function ___lldiv *****************
  1161 ;; Defined at:
  1162 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  divisor         4    0[COMMON] unsigned long 
  1165 ;;  dividend        4    4[COMMON] unsigned long 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  quotient        4    9[COMMON] unsigned long 
  1168 ;;  counter         1   13[COMMON] unsigned char 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  4    0[COMMON] unsigned long 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2, status,0
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1178 ;;      Params:         8       0       0       0       0
  1179 ;;      Locals:         5       0       0       0       0
  1180 ;;      Temps:          1       0       0       0       0
  1181 ;;      Totals:        14       0       0       0       0
  1182 ;;Total ram usage:       14 bytes
  1183 ;; Hardware stack levels used: 1
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_UART_Init
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191     0674                     ___lldiv:	
  1192                           ;psect for function ___lldiv
  1193                           
  1194     0674                     l803:	
  1195                           ;incstack = 0
  1196                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1197                           
  1198     0674  3000               	movlw	0
  1199     0675  00FC               	movwf	___lldiv@quotient+3
  1200     0676  3000               	movlw	0
  1201     0677  00FB               	movwf	___lldiv@quotient+2
  1202     0678  3000               	movlw	0
  1203     0679  00FA               	movwf	___lldiv@quotient+1
  1204     067A  3000               	movlw	0
  1205     067B  00F9               	movwf	___lldiv@quotient
  1206     067C  0873               	movf	___lldiv@divisor+3,w
  1207     067D  0472               	iorwf	___lldiv@divisor+2,w
  1208     067E  0471               	iorwf	___lldiv@divisor+1,w
  1209     067F  0470               	iorwf	___lldiv@divisor,w
  1210     0680  1903               	skipnz
  1211     0681  2E83               	goto	u231
  1212     0682  2E84               	goto	u230
  1213     0683                     u231:
  1214     0683  2ED1               	goto	l823
  1215     0684                     u230:
  1216     0684                     l805:
  1217     0684  01FD               	clrf	___lldiv@counter
  1218     0685  0AFD               	incf	___lldiv@counter,f
  1219     0686  2E94               	goto	l809
  1220     0687                     l807:
  1221     0687  3001               	movlw	1
  1222     0688  00F8               	movwf	??___lldiv
  1223     0689                     u245:
  1224     0689  1003               	clrc
  1225     068A  0DF0               	rlf	___lldiv@divisor,f
  1226     068B  0DF1               	rlf	___lldiv@divisor+1,f
  1227     068C  0DF2               	rlf	___lldiv@divisor+2,f
  1228     068D  0DF3               	rlf	___lldiv@divisor+3,f
  1229     068E  0BF8               	decfsz	??___lldiv,f
  1230     068F  2E89               	goto	u245
  1231     0690  3001               	movlw	1
  1232     0691  00F8               	movwf	??___lldiv
  1233     0692  0878               	movf	??___lldiv,w
  1234     0693  07FD               	addwf	___lldiv@counter,f
  1235     0694                     l809:
  1236     0694  1FF3               	btfss	___lldiv@divisor+3,7
  1237     0695  2E97               	goto	u251
  1238     0696  2E98               	goto	u250
  1239     0697                     u251:
  1240     0697  2E87               	goto	l807
  1241     0698                     u250:
  1242     0698                     l811:
  1243     0698  3001               	movlw	1
  1244     0699  00F8               	movwf	??___lldiv
  1245     069A                     u265:
  1246     069A  1003               	clrc
  1247     069B  0DF9               	rlf	___lldiv@quotient,f
  1248     069C  0DFA               	rlf	___lldiv@quotient+1,f
  1249     069D  0DFB               	rlf	___lldiv@quotient+2,f
  1250     069E  0DFC               	rlf	___lldiv@quotient+3,f
  1251     069F  0BF8               	decfsz	??___lldiv,f
  1252     06A0  2E9A               	goto	u265
  1253     06A1                     l813:
  1254     06A1  0873               	movf	___lldiv@divisor+3,w
  1255     06A2  0277               	subwf	___lldiv@dividend+3,w
  1256     06A3  1D03               	skipz
  1257     06A4  2EAF               	goto	u275
  1258     06A5  0872               	movf	___lldiv@divisor+2,w
  1259     06A6  0276               	subwf	___lldiv@dividend+2,w
  1260     06A7  1D03               	skipz
  1261     06A8  2EAF               	goto	u275
  1262     06A9  0871               	movf	___lldiv@divisor+1,w
  1263     06AA  0275               	subwf	___lldiv@dividend+1,w
  1264     06AB  1D03               	skipz
  1265     06AC  2EAF               	goto	u275
  1266     06AD  0870               	movf	___lldiv@divisor,w
  1267     06AE  0274               	subwf	___lldiv@dividend,w
  1268     06AF                     u275:
  1269     06AF  1C03               	skipc
  1270     06B0  2EB2               	goto	u271
  1271     06B1  2EB3               	goto	u270
  1272     06B2                     u271:
  1273     06B2  2EC2               	goto	l819
  1274     06B3                     u270:
  1275     06B3                     l815:
  1276     06B3  0870               	movf	___lldiv@divisor,w
  1277     06B4  02F4               	subwf	___lldiv@dividend,f
  1278     06B5  0871               	movf	___lldiv@divisor+1,w
  1279     06B6  1C03               	skipc
  1280     06B7  0F71               	incfsz	___lldiv@divisor+1,w
  1281     06B8  02F5               	subwf	___lldiv@dividend+1,f
  1282     06B9  0872               	movf	___lldiv@divisor+2,w
  1283     06BA  1C03               	skipc
  1284     06BB  0F72               	incfsz	___lldiv@divisor+2,w
  1285     06BC  02F6               	subwf	___lldiv@dividend+2,f
  1286     06BD  0873               	movf	___lldiv@divisor+3,w
  1287     06BE  1C03               	skipc
  1288     06BF  0F73               	incfsz	___lldiv@divisor+3,w
  1289     06C0  02F7               	subwf	___lldiv@dividend+3,f
  1290     06C1                     l817:
  1291     06C1  1479               	bsf	___lldiv@quotient,0
  1292     06C2                     l819:
  1293     06C2  3001               	movlw	1
  1294     06C3                     u285:
  1295     06C3  1003               	clrc
  1296     06C4  0CF3               	rrf	___lldiv@divisor+3,f
  1297     06C5  0CF2               	rrf	___lldiv@divisor+2,f
  1298     06C6  0CF1               	rrf	___lldiv@divisor+1,f
  1299     06C7  0CF0               	rrf	___lldiv@divisor,f
  1300     06C8  3EFF               	addlw	-1
  1301     06C9  1D03               	skipz
  1302     06CA  2EC3               	goto	u285
  1303     06CB                     l821:
  1304     06CB  3001               	movlw	1
  1305     06CC  02FD               	subwf	___lldiv@counter,f
  1306     06CD  1D03               	btfss	3,2
  1307     06CE  2ED0               	goto	u291
  1308     06CF  2ED1               	goto	u290
  1309     06D0                     u291:
  1310     06D0  2E98               	goto	l811
  1311     06D1                     u290:
  1312     06D1                     l823:
  1313     06D1  087C               	movf	___lldiv@quotient+3,w
  1314     06D2  00F3               	movwf	?___lldiv+3
  1315     06D3  087B               	movf	___lldiv@quotient+2,w
  1316     06D4  00F2               	movwf	?___lldiv+2
  1317     06D5  087A               	movf	___lldiv@quotient+1,w
  1318     06D6  00F1               	movwf	?___lldiv+1
  1319     06D7  0879               	movf	___lldiv@quotient,w
  1320     06D8  00F0               	movwf	?___lldiv
  1321     06D9                     l215:
  1322     06D9  0008               	return
  1323     06DA                     __end_of___lldiv:
  1324                           
  1325                           	psect	text6
  1326     0631                     __ptext6:	
  1327 ;; *************** function _UART_GetC *****************
  1328 ;; Defined at:
  1329 ;;		line 46 in file "USARTmodl.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      unsigned char 
  1336 ;; Registers used:
  1337 ;;		wreg
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         0       0       0       0       0
  1344 ;;      Locals:         0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0
  1346 ;;      Totals:         0       0       0       0       0
  1347 ;;Total ram usage:        0 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356     0631                     _UART_GetC:	
  1357                           ;psect for function _UART_GetC
  1358                           
  1359     0631                     l875:	
  1360                           ;incstack = 0
  1361                           ; Regs used in _UART_GetC: [wreg]
  1362                           
  1363     0631                     l77:	
  1364                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  1365                           
  1366     0631  1283               	bcf	3,5	;RP0=0, select bank0
  1367     0632  1303               	bcf	3,6	;RP1=0, select bank0
  1368     0633  1E8C               	btfss	12,5	;volatile
  1369     0634  2E36               	goto	u391
  1370     0635  2E37               	goto	u390
  1371     0636                     u391:
  1372     0636  2E31               	goto	l77
  1373     0637                     u390:
  1374     0637                     l79:
  1375                           
  1376                           ;USARTmodl.c: 49:   if (OERR)
  1377     0637  1C98               	btfss	24,1	;volatile
  1378     0638  2E3A               	goto	u401
  1379     0639  2E3B               	goto	u400
  1380     063A                     u401:
  1381     063A  2E3D               	goto	l879
  1382     063B                     u400:
  1383     063B                     l877:
  1384                           
  1385                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  1386     063B  1218               	bcf	24,4	;volatile
  1387                           
  1388                           ;USARTmodl.c: 52:     CREN = 1;
  1389     063C  1618               	bsf	24,4	;volatile
  1390     063D                     l879:
  1391                           
  1392                           ;USARTmodl.c: 54:   return RCREG;
  1393     063D  081A               	movf	26,w	;volatile
  1394     063E                     l81:
  1395     063E  0008               	return
  1396     063F                     __end_of_UART_GetC:
  1397                           
  1398                           	psect	text7
  1399     061B                     __ptext7:	
  1400 ;; *************** function _UART_Data_Ready *****************
  1401 ;; Defined at:
  1402 ;;		line 41 in file "USARTmodl.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;		None               void
  1409 ;; Registers used:
  1410 ;;		status,2, status,0
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0
  1419 ;;      Totals:         0       0       0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429     061B                     _UART_Data_Ready:	
  1430                           ;psect for function _UART_Data_Ready
  1431                           
  1432     061B                     l867:	
  1433                           ;incstack = 0
  1434                           ; Regs used in _UART_Data_Ready: [status]
  1435                           
  1436                           
  1437                           ;USARTmodl.c: 43:   return RCIF;
  1438     061B  1283               	bcf	3,5	;RP0=0, select bank0
  1439     061C  1303               	bcf	3,6	;RP1=0, select bank0
  1440     061D  1A8C               	btfsc	12,5	;volatile
  1441     061E  2E20               	goto	u381
  1442     061F  2E21               	goto	u380
  1443     0620                     u381:
  1444     0620  2E23               	goto	l871
  1445     0621                     u380:
  1446     0621                     l869:
  1447     0621  1003               	clrc
  1448     0622  2E24               	goto	l74
  1449     0623                     l871:
  1450     0623  1403               	setc
  1451     0624                     l74:
  1452     0624  0008               	return
  1453     0625                     __end_of_UART_Data_Ready:
  1454     007E                     btemp	set	126	;btemp
  1455     007E                     wtemp0	set	126
  1456                           
  1457                           	psect	idloc
  1458                           
  1459                           ;Config register IDLOC0 @ 0x2000
  1460                           ;	unspecified, using default values
  1461     2000                     	org	8192
  1462     2000  3FFF               	dw	16383
  1463                           
  1464                           ;Config register IDLOC1 @ 0x2001
  1465                           ;	unspecified, using default values
  1466     2001                     	org	8193
  1467     2001  3FFF               	dw	16383
  1468                           
  1469                           ;Config register IDLOC2 @ 0x2002
  1470                           ;	unspecified, using default values
  1471     2002                     	org	8194
  1472     2002  3FFF               	dw	16383
  1473                           
  1474                           ;Config register IDLOC3 @ 0x2003
  1475                           ;	unspecified, using default values
  1476     2003                     	org	8195
  1477     2003  3FFF               	dw	16383
  1478                           
  1479                           	psect	config
  1480                           
  1481                           ;Config register CONFIG1 @ 0x2007
  1482                           ;	Oscillator Selection bits
  1483                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1484                           ;	Watchdog Timer Enable bit
  1485                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1486                           ;	Power-up Timer Enable bit
  1487                           ;	PWRTE = OFF, PWRT disabled
  1488                           ;	RE3/MCLR pin function select bit
  1489                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1490                           ;	Code Protection bit
  1491                           ;	CP = OFF, Program memory code protection is disabled
  1492                           ;	Data Code Protection bit
  1493                           ;	CPD = OFF, Data memory code protection is disabled
  1494                           ;	Brown Out Reset Selection bits
  1495                           ;	BOREN = OFF, BOR disabled
  1496                           ;	Internal External Switchover bit
  1497                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1498                           ;	Fail-Safe Clock Monitor Enabled bit
  1499                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1500                           ;	Low Voltage Programming Enable bit
  1501                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1502                           ;	In-Circuit Debugger Mode bit
  1503                           ;	DEBUG = 0x1, unprogrammed default
  1504     2007                     	org	8199
  1505     2007  38D5               	dw	14549
  1506                           
  1507                           ;Config register CONFIG2 @ 0x2008
  1508                           ;	Brown-out Reset Selection bit
  1509                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1510                           ;	Flash Program Memory Self Write Enable bits
  1511                           ;	WRT = OFF, Write protection off
  1512     2008                     	org	8200
  1513     2008  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    39
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Print@data	PTR const unsigned char  size(1) Largest target is 39
		 -> STR_3(CODE[7]), STR_2(CODE[3]), message(CODE[39]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _UART_Print->_UART_PutC
    _UART_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_UART_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1012
                                             10 BANK0      5     5      0
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Print                                           3     3      0     244
                                              1 COMMON     3     3      0
                          _UART_PutC
 ---------------------------------------------------------------------------------
 (1) _UART_PutC                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     700
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
   _UART_PutC
   _uart_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F       F       5       18.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Apr 18 00:52:57 2023

                      pc 0002                       l29 0651                       l81 063E  
                     l65 07E6                       l74 0624                       l66 07F7  
                     l67 07FB                       l84 0626                       l77 0631  
                     l93 0673                       l79 0637                       l87 0630  
                     fsr 0004                      l215 06D9                      l801 062C  
                    l811 0698                      l803 0674                      l821 06CB  
                    l813 06A1                      l805 0684                      l901 0732  
                    l815 06B3                      l807 0687                      l823 06D1  
                    l831 0649                      l911 0752                      l903 0738  
                    l817 06C1                      l809 0694                      l833 064E  
                    l905 073E                      l819 06C2                      l851 07A1  
                    l843 075C                      l827 063F                      l907 0741  
                    l853 07D3                      l845 078E                      l861 0655  
                    l829 0645                      l909 074A                      l871 0623  
                    l855 07E0                      l847 0792                      l863 0662  
                    l839 0650                      l857 07EF                      l849 0794  
                    l865 0666                      l867 061B                      l875 0631  
                    l859 0653                      l891 0702                      l883 06DA  
                    l869 0621                      l877 063B                      l893 0710  
                    l885 06DE                      l879 063D                      l799 0626  
                    l895 0716                      l887 06ED                      l897 0724  
                    l889 06FC                      l899 072A                      u220 062C  
                    u300 0645                      u221 062B                      u301 0644  
                    u230 0684                      u310 0649                      u231 0683  
                    u311 0648                      u400 063B                      u320 076C  
                    u401 063A                      u250 0698                      u330 0792  
                    u410 0738                      u251 0697                      u331 0791  
                    u411 0737                      u340 07A1                      u420 074A  
                    u245 0689                      u341 07A0                      u325 0767  
                    u421 0749                      u270 06B3                      u350 07B1  
                    u271 06B2                      u360 07E0                      u265 069A  
                    u361 07DF                      u345 079D                      u290 06D1  
                    u370 0673                      u291 06D0                      u275 06AF  
                    u355 07AC                      u371 0672                      u380 0621  
                    u381 0620                      u285 06C3                      u365 07DC  
                    u437 06F5                      u390 0637                      u391 0636  
                    u447 070A                      u457 071E                      fsr0 0004  
                   STR_1 0030                     STR_2 003C                     STR_3 003F  
                   _CREN 00C4                     _RCIF 0065                     _OERR 00C1  
                   _TRMT 04C1                     _main 06DA                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___lldiv 06DA  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _TXREG 0019                    _TXSTA 0098              ?_UART_Print 0070  
        __end_of_message 0030                    main@c 002E                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 075C                   ??_main 002A                   _OSCCON 008F  
      __end_of_UART_GetC 063F        __end_of_UART_Init 07FC        __end_of_UART_PutC 0631  
              ??___lldiv 0078  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 06DA             ??_UART_Print 0071               __stringtab 0003  
     __end_of_UART_Print 0674                  ___lldiv 0674                  __ptext1 063F  
                __ptext2 0652                  __ptext3 0625                  __ptext4 075C  
                __ptext5 0674                  __ptext6 0631                  __ptext7 061B  
                _message 0009              UART_Print@i 0072           UART_Print@data 0073  
   end_of_initialization 07FC        __end_of_uart_read 0652          ___lldiv@divisor 0070  
        ___lldiv@counter 007D                _RCSTAbits 0018        ??_UART_Data_Ready 0070  
              _UART_GetC 0631                _UART_Init 075C                _UART_PutC 0625  
     UART_Init@baud_rate 0020               ?_UART_GetC 0070               ?_UART_Init 0020  
             ?_UART_PutC 0070      start_initialization 07FC                ___latbits 0002  
          __pcstackBANK0 0020                 ?___lldiv 0070              ??_UART_GetC 0070  
            ??_UART_Init 0024              ??_UART_PutC 0070                __pstrings 0003  
          UART_PutC@data 0070               UART_Init@n 0028          _UART_Data_Ready 061B  
               _PIR1bits 000C                _uart_read 063F              __stringbase 0008  
              main@datos 002D               ?_uart_read 0070       __end_of__stringtab 0009  
__end_of_UART_Data_Ready 0625         ___lldiv@dividend 0074                stringcode 0003  
            ??_uart_read 0070         ___lldiv@quotient 0079                 stringdir 0003  
               stringtab 0003               _UART_Print 0652         ?_UART_Data_Ready 0070  
