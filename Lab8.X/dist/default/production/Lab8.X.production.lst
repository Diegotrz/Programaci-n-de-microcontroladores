

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Apr 21 17:52:54 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     008F                     	;# 
   110     0090                     	;# 
   111     0091                     	;# 
   112     0092                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0094                     	;# 
   117     0095                     	;# 
   118     0096                     	;# 
   119     0097                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009A                     	;# 
   123     009B                     	;# 
   124     009C                     	;# 
   125     009D                     	;# 
   126     009E                     	;# 
   127     009F                     	;# 
   128     0105                     	;# 
   129     0107                     	;# 
   130     0108                     	;# 
   131     0109                     	;# 
   132     010C                     	;# 
   133     010C                     	;# 
   134     010D                     	;# 
   135     010E                     	;# 
   136     010F                     	;# 
   137     0185                     	;# 
   138     0187                     	;# 
   139     0188                     	;# 
   140     0189                     	;# 
   141     018C                     	;# 
   142     018D                     	;# 
   143     0000                     	;# 
   144     0001                     	;# 
   145     0002                     	;# 
   146     0003                     	;# 
   147     0004                     	;# 
   148     0005                     	;# 
   149     0006                     	;# 
   150     0007                     	;# 
   151     0008                     	;# 
   152     0009                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000D                     	;# 
   157     000E                     	;# 
   158     000E                     	;# 
   159     000F                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0015                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     0081                     	;# 
   179     0085                     	;# 
   180     0086                     	;# 
   181     0087                     	;# 
   182     0088                     	;# 
   183     0089                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     008F                     	;# 
   188     0090                     	;# 
   189     0091                     	;# 
   190     0092                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0094                     	;# 
   195     0095                     	;# 
   196     0096                     	;# 
   197     0097                     	;# 
   198     0098                     	;# 
   199     0099                     	;# 
   200     009A                     	;# 
   201     009B                     	;# 
   202     009C                     	;# 
   203     009D                     	;# 
   204     009E                     	;# 
   205     009F                     	;# 
   206     0105                     	;# 
   207     0107                     	;# 
   208     0108                     	;# 
   209     0109                     	;# 
   210     010C                     	;# 
   211     010C                     	;# 
   212     010D                     	;# 
   213     010E                     	;# 
   214     010F                     	;# 
   215     0185                     	;# 
   216     0187                     	;# 
   217     0188                     	;# 
   218     0189                     	;# 
   219     018C                     	;# 
   220     018D                     	;# 
   221     0000                     	;# 
   222     0001                     	;# 
   223     0002                     	;# 
   224     0003                     	;# 
   225     0004                     	;# 
   226     0005                     	;# 
   227     0006                     	;# 
   228     0007                     	;# 
   229     0008                     	;# 
   230     0009                     	;# 
   231     000A                     	;# 
   232     000B                     	;# 
   233     000C                     	;# 
   234     000D                     	;# 
   235     000E                     	;# 
   236     000E                     	;# 
   237     000F                     	;# 
   238     0010                     	;# 
   239     0011                     	;# 
   240     0012                     	;# 
   241     0013                     	;# 
   242     0014                     	;# 
   243     0015                     	;# 
   244     0015                     	;# 
   245     0016                     	;# 
   246     0017                     	;# 
   247     0018                     	;# 
   248     0019                     	;# 
   249     001A                     	;# 
   250     001B                     	;# 
   251     001B                     	;# 
   252     001C                     	;# 
   253     001D                     	;# 
   254     001E                     	;# 
   255     001F                     	;# 
   256     0081                     	;# 
   257     0085                     	;# 
   258     0086                     	;# 
   259     0087                     	;# 
   260     0088                     	;# 
   261     0089                     	;# 
   262     008C                     	;# 
   263     008D                     	;# 
   264     008E                     	;# 
   265     008F                     	;# 
   266     0090                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0094                     	;# 
   273     0095                     	;# 
   274     0096                     	;# 
   275     0097                     	;# 
   276     0098                     	;# 
   277     0099                     	;# 
   278     009A                     	;# 
   279     009B                     	;# 
   280     009C                     	;# 
   281     009D                     	;# 
   282     009E                     	;# 
   283     009F                     	;# 
   284     0105                     	;# 
   285     0107                     	;# 
   286     0108                     	;# 
   287     0109                     	;# 
   288     010C                     	;# 
   289     010C                     	;# 
   290     010D                     	;# 
   291     010E                     	;# 
   292     010F                     	;# 
   293     0185                     	;# 
   294     0187                     	;# 
   295     0188                     	;# 
   296     0189                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299                           
   300                           	psect	strings
   301     039C                     __pstrings:
   302     039C                     stringtab:
   303     039C                     __stringtab:
   304                           
   305                           ;	String table - string pointers are 1 byte each
   306     039C  1BFF               	btfsc	btemp+1,7
   307     039D  2BA6               	ljmp	stringcode
   308     039E  1383               	bcf	3,7
   309     039F  187F               	btfsc	btemp+1,0
   310     03A0  1783               	bsf	3,7
   311     03A1  0800               	movf	0,w
   312     03A2  0A84               	incf	4,f
   313     03A3  1903               	skipnz
   314     03A4  0AFF               	incf	btemp+1,f
   315     03A5  0008               	return
   316     03A6                     stringcode:
   317     03A6                     stringdir:
   318     03A6  3003               	movlw	high stringdir
   319     03A7  008A               	movwf	10
   320     03A8  0804               	movf	4,w
   321     03A9  0A84               	incf	4,f
   322     03AA  0782               	addwf	2,f
   323     03AB                     __stringbase:
   324     03AB  3400               	retlw	0
   325     03AC                     __end_of__stringtab:
   326     03AC                     _dpowers:
   327     03AC  3401               	retlw	1
   328     03AD  3400               	retlw	0
   329     03AE  340A               	retlw	10
   330     03AF  3400               	retlw	0
   331     03B0  3464               	retlw	100
   332     03B1  3400               	retlw	0
   333     03B2  34E8               	retlw	232
   334     03B3  3403               	retlw	3
   335     03B4  3410               	retlw	16
   336     03B5  3427               	retlw	39
   337     03B6                     __end_of_dpowers:
   338     03B6                     _message:
   339     03B6  3432               	retlw	50
   340     03B7  342E               	retlw	46
   341     03B8  3445               	retlw	69
   342     03B9  346E               	retlw	110
   343     03BA  3476               	retlw	118
   344     03BB  3469               	retlw	105
   345     03BC  3461               	retlw	97
   346     03BD  3472               	retlw	114
   347     03BE  3420               	retlw	32
   348     03BF  3441               	retlw	65
   349     03C0  3473               	retlw	115
   350     03C1  3463               	retlw	99
   351     03C2  3469               	retlw	105
   352     03C3  3469               	retlw	105
   353     03C4  3400               	retlw	0
   354     03C5                     __end_of_message:
   355     0019                     _TXREG	set	25
   356     0018                     _RCSTA	set	24
   357     000B                     _INTCONbits	set	11
   358     001A                     _RCREG	set	26
   359     0018                     _RCSTAbits	set	24
   360     001E                     _ADRESH	set	30
   361     001F                     _ADCON0bits	set	31
   362     000C                     _PIR1bits	set	12
   363     00C4                     _CREN	set	196
   364     00C1                     _OERR	set	193
   365     0065                     _RCIF	set	101
   366     0098                     _TXSTA	set	152
   367     0099                     _SPBRG	set	153
   368     008C                     _PIE1bits	set	140
   369     009F                     _ADCON1bits	set	159
   370     0085                     _TRISA	set	133
   371     008F                     _OSCCON	set	143
   372     04C1                     _TRMT	set	1217
   373     0189                     _ANSELH	set	393
   374     0188                     _ANSEL	set	392
   375     03C5                     STR_1:
   376     03C5  3431               	retlw	49	;'1'
   377     03C6  342E               	retlw	46	;'.'
   378     03C7  344C               	retlw	76	;'L'
   379     03C8  3465               	retlw	101	;'e'
   380     03C9  3465               	retlw	101	;'e'
   381     03CA  3472               	retlw	114	;'r'
   382     03CB  3420               	retlw	32	;' '
   383     03CC  3470               	retlw	112	;'p'
   384     03CD  346F               	retlw	111	;'o'
   385     03CE  3474               	retlw	116	;'t'
   386     03CF  3465               	retlw	101	;'e'
   387     03D0  346E               	retlw	110	;'n'
   388     03D1  3463               	retlw	99	;'c'
   389     03D2  3469               	retlw	105	;'i'
   390     03D3  346F               	retlw	111	;'o'
   391     03D4  346D               	retlw	109	;'m'
   392     03D5  3465               	retlw	101	;'e'
   393     03D6  3474               	retlw	116	;'t'
   394     03D7  3472               	retlw	114	;'r'
   395     03D8  346F               	retlw	111	;'o'
   396     03D9  340D               	retlw	13
   397     03DA  340A               	retlw	10
   398     03DB  3400               	retlw	0
   399     03DC                     STR_4:
   400     03DC  3425               	retlw	37	;'%'
   401     03DD  3430               	retlw	48	;'0'
   402     03DE  3433               	retlw	51	;'3'
   403     03DF  3475               	retlw	117	;'u'
   404     03E0  340D               	retlw	13
   405     03E1  340A               	retlw	10
   406     03E2  3400               	retlw	0
   407     03D9                     
   408                           	psect	cinit
   409     000F                     start_initialization:	
   410                           ; #config settings
   411                           
   412     000F                     __initialization:
   413                           
   414                           ; Clear objects allocated to BANK0
   415     000F  1283               	bcf	3,5	;RP0=0, select bank0
   416     0010  1303               	bcf	3,6	;RP1=0, select bank0
   417     0011  01C2               	clrf	__pbssBANK0& (0+127)
   418     0012                     end_of_initialization:	
   419                           ;End of C runtime variable initialization code
   420                           
   421     0012                     __end_of__initialization:
   422     0012  0183               	clrf	3
   423     0013  120A  118A  299C   	ljmp	_main	;jump to C main() function
   424                           
   425                           	psect	bssBANK0
   426     0042                     __pbssBANK0:
   427     0042                     _valpot:
   428     0042                     	ds	1
   429                           
   430                           	psect	cstackCOMMON
   431     0070                     __pcstackCOMMON:
   432     0070                     ?_UART_Data_Ready:
   433     0070                     ?_isdigit:	
   434                           ; 1 bit 
   435                           
   436     0070                     ?_setup:	
   437                           ; 1 bit 
   438                           
   439     0070                     ?_preguntas:	
   440                           ; 1 bytes @ 0x0
   441                           
   442     0070                     ?_UART_GetC:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0070                     ?_UART_PutC:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0070                     ?_isr:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0070                     ??_isr:	
   452                           ; 1 bytes @ 0x0
   453                           
   454     0070                     ?_uart_read:	
   455                           ; 1 bytes @ 0x0
   456                           
   457     0070                     ?_main:	
   458                           ; 1 bytes @ 0x0
   459                           
   460                           
   461                           ; 1 bytes @ 0x0
   462     0070                     	ds	3
   463     0073                     ??_setup:
   464     0073                     ??_UART_Data_Ready:	
   465                           ; 1 bytes @ 0x3
   466                           
   467     0073                     ??_UART_GetC:	
   468                           ; 1 bytes @ 0x3
   469                           
   470     0073                     ??_UART_PutC:	
   471                           ; 1 bytes @ 0x3
   472                           
   473     0073                     ??_isdigit:	
   474                           ; 1 bytes @ 0x3
   475                           
   476     0073                     ??_uart_read:	
   477                           ; 1 bytes @ 0x3
   478                           
   479     0073                     ?___wmul:	
   480                           ; 1 bytes @ 0x3
   481                           
   482     0073                     ?___lwdiv:	
   483                           ; 2 bytes @ 0x3
   484                           
   485     0073                     ?___lldiv:	
   486                           ; 2 bytes @ 0x3
   487                           
   488     0073                     UART_PutC@data:	
   489                           ; 4 bytes @ 0x3
   490                           
   491     0073                     _isdigit$795:	
   492                           ; 1 bytes @ 0x3
   493                           
   494     0073                     ___wmul@multiplier:	
   495                           ; 1 bytes @ 0x3
   496                           
   497     0073                     ___lwdiv@divisor:	
   498                           ; 2 bytes @ 0x3
   499                           
   500     0073                     ___lldiv@divisor:	
   501                           ; 2 bytes @ 0x3
   502                           
   503                           
   504                           ; 4 bytes @ 0x3
   505     0073                     	ds	1
   506     0074                     ?_UART_Print:
   507     0074                     isdigit@c:	
   508                           ; 1 bytes @ 0x4
   509                           
   510     0074                     UART_Print@data:	
   511                           ; 1 bytes @ 0x4
   512                           
   513                           
   514                           ; 2 bytes @ 0x4
   515     0074                     	ds	1
   516     0075                     ___wmul@multiplicand:
   517     0075                     ___lwdiv@dividend:	
   518                           ; 2 bytes @ 0x5
   519                           
   520                           
   521                           ; 2 bytes @ 0x5
   522     0075                     	ds	1
   523     0076                     ??_UART_Print:
   524                           
   525                           ; 1 bytes @ 0x6
   526     0076                     	ds	1
   527     0077                     ??___wmul:
   528     0077                     ??___lwdiv:	
   529                           ; 1 bytes @ 0x7
   530                           
   531     0077                     ___wmul@product:	
   532                           ; 1 bytes @ 0x7
   533                           
   534     0077                     ___lldiv@dividend:	
   535                           ; 2 bytes @ 0x7
   536                           
   537                           
   538                           ; 4 bytes @ 0x7
   539     0077                     	ds	1
   540     0078                     UART_Print@i:
   541     0078                     ___lwdiv@quotient:	
   542                           ; 1 bytes @ 0x8
   543                           
   544                           
   545                           ; 2 bytes @ 0x8
   546     0078                     	ds	1
   547     0079                     ??_preguntas:
   548                           
   549                           ; 1 bytes @ 0x9
   550     0079                     	ds	1
   551     007A                     ___lwdiv@counter:
   552                           
   553                           ; 1 bytes @ 0xA
   554     007A                     	ds	1
   555                           
   556                           	psect	cstackBANK0
   557     0020                     __pcstackBANK0:
   558     0020                     ??___lldiv:
   559     0020                     ?___lwmod:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0020                     ___lwmod@divisor:	
   563                           ; 2 bytes @ 0x0
   564                           
   565                           
   566                           ; 2 bytes @ 0x0
   567     0020                     	ds	1
   568     0021                     ___lldiv@quotient:
   569                           
   570                           ; 4 bytes @ 0x1
   571     0021                     	ds	1
   572     0022                     ___lwmod@dividend:
   573                           
   574                           ; 2 bytes @ 0x2
   575     0022                     	ds	2
   576     0024                     ??___lwmod:
   577                           
   578                           ; 1 bytes @ 0x4
   579     0024                     	ds	1
   580     0025                     ___lldiv@counter:
   581     0025                     ___lwmod@counter:	
   582                           ; 1 bytes @ 0x5
   583                           
   584                           
   585                           ; 1 bytes @ 0x5
   586     0025                     	ds	1
   587     0026                     ?_UART_Init:
   588     0026                     ?_sprintf:	
   589                           ; 1 bytes @ 0x6
   590                           
   591     0026                     sprintf@f:	
   592                           ; 2 bytes @ 0x6
   593                           
   594     0026                     UART_Init@baud_rate:	
   595                           ; 1 bytes @ 0x6
   596                           
   597                           
   598                           ; 4 bytes @ 0x6
   599     0026                     	ds	3
   600     0029                     ??_sprintf:
   601                           
   602                           ; 1 bytes @ 0x9
   603     0029                     	ds	1
   604     002A                     ??_UART_Init:
   605                           
   606                           ; 1 bytes @ 0xA
   607     002A                     	ds	2
   608     002C                     sprintf@ap:
   609                           
   610                           ; 1 bytes @ 0xC
   611     002C                     	ds	1
   612     002D                     sprintf@flag:
   613                           
   614                           ; 1 bytes @ 0xD
   615     002D                     	ds	1
   616     002E                     UART_Init@n:
   617     002E                     sprintf@val:	
   618                           ; 2 bytes @ 0xE
   619                           
   620                           
   621                           ; 2 bytes @ 0xE
   622     002E                     	ds	2
   623     0030                     sprintf@prec:
   624                           
   625                           ; 1 bytes @ 0x10
   626     0030                     	ds	1
   627     0031                     sprintf@sp:
   628                           
   629                           ; 1 bytes @ 0x11
   630     0031                     	ds	1
   631     0032                     sprintf@width:
   632                           
   633                           ; 2 bytes @ 0x12
   634     0032                     	ds	2
   635     0034                     sprintf@c:
   636                           
   637                           ; 1 bytes @ 0x14
   638     0034                     	ds	1
   639     0035                     ??_main:
   640                           
   641                           ; 1 bytes @ 0x15
   642     0035                     	ds	3
   643     0038                     main@text:
   644                           
   645                           ; 9 bytes @ 0x18
   646     0038                     	ds	9
   647     0041                     main@c:
   648                           
   649                           ; 1 bytes @ 0x21
   650     0041                     	ds	1
   651                           
   652                           	psect	maintext
   653     019C                     __pmaintext:	
   654 ;;
   655 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   656 ;;
   657 ;; *************** function _main *****************
   658 ;; Defined at:
   659 ;;		line 67 in file "Prelab_8.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  c               1   33[BANK0 ] unsigned char 
   664 ;;  text            9   24[BANK0 ] unsigned char [9]
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : B00/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         0       0       0       0       0
   675 ;;      Locals:         0      10       0       0       0
   676 ;;      Temps:          0       3       0       0       0
   677 ;;      Totals:         0      13       0       0       0
   678 ;;Total ram usage:       13 bytes
   679 ;; Hardware stack levels required when called: 4
   680 ;; This function calls:
   681 ;;		_UART_Data_Ready
   682 ;;		_UART_GetC
   683 ;;		_UART_Init
   684 ;;		_UART_Print
   685 ;;		_UART_PutC
   686 ;;		_preguntas
   687 ;;		_setup
   688 ;;		_sprintf
   689 ;;		_uart_read
   690 ;; This function is called by:
   691 ;;		Startup code after reset
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695     019C                     _main:	
   696                           ;psect for function _main
   697                           
   698     019C                     l1483:	
   699                           ;incstack = 0
   700                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   701                           
   702                           
   703                           ;Prelab_8.c: 69:     setup();
   704     019C  120A  118A  24BB  120A  118A  	fcall	_setup
   705     01A1                     l1485:
   706                           
   707                           ;Prelab_8.c: 70:   OSCCON = 0x70;
   708     01A1  3070               	movlw	112
   709     01A2  1683               	bsf	3,5	;RP0=1, select bank1
   710     01A3  1303               	bcf	3,6	;RP1=0, select bank1
   711     01A4  008F               	movwf	15	;volatile
   712     01A5                     l1487:
   713                           
   714                           ;Prelab_8.c: 72:   UART_Init(9600);
   715     01A5  3000               	movlw	0
   716     01A6  1283               	bcf	3,5	;RP0=0, select bank0
   717     01A7  1303               	bcf	3,6	;RP1=0, select bank0
   718     01A8  00A9               	movwf	UART_Init@baud_rate+3
   719     01A9  3000               	movlw	0
   720     01AA  00A8               	movwf	UART_Init@baud_rate+2
   721     01AB  3025               	movlw	37
   722     01AC  00A7               	movwf	UART_Init@baud_rate+1
   723     01AD  3080               	movlw	128
   724     01AE  00A6               	movwf	UART_Init@baud_rate
   725     01AF  120A  118A  2294  120A  118A  	fcall	_UART_Init
   726     01B4                     l1489:
   727                           
   728                           ;Prelab_8.c: 74:   _delay((unsigned long)((2000)*(8000000/4000.0)));
   729     01B4  3015               	movlw	21
   730     01B5  1283               	bcf	3,5	;RP0=0, select bank0
   731     01B6  1303               	bcf	3,6	;RP1=0, select bank0
   732     01B7  00B7               	movwf	??_main+2
   733     01B8  304B               	movlw	75
   734     01B9  00B6               	movwf	??_main+1
   735     01BA  30BD               	movlw	189
   736     01BB  00B5               	movwf	??_main
   737     01BC                     u1117:
   738     01BC  0BB5               	decfsz	??_main,f
   739     01BD  29BC               	goto	u1117
   740     01BE  0BB6               	decfsz	??_main+1,f
   741     01BF  29BC               	goto	u1117
   742     01C0  0BB7               	decfsz	??_main+2,f
   743     01C1  29BC               	goto	u1117
   744     01C2  29C3               	nop2
   745     01C3                     l1491:
   746                           
   747                           ;Prelab_8.c: 76:   UART_Print("1.Leer potenciometro\r\n");
   748     01C3  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   749     01C4  00F4               	movwf	UART_Print@data
   750     01C5  3080               	movlw	128
   751     01C6  00F5               	movwf	UART_Print@data+1
   752     01C7  120A  118A  2463  120A  118A  	fcall	_UART_Print
   753     01CC                     l1493:
   754                           
   755                           ;Prelab_8.c: 78:   _delay((unsigned long)((1000)*(8000000/4000.0)));
   756     01CC  300B               	movlw	11
   757     01CD  1283               	bcf	3,5	;RP0=0, select bank0
   758     01CE  1303               	bcf	3,6	;RP1=0, select bank0
   759     01CF  00B7               	movwf	??_main+2
   760     01D0  3026               	movlw	38
   761     01D1  00B6               	movwf	??_main+1
   762     01D2  305D               	movlw	93
   763     01D3  00B5               	movwf	??_main
   764     01D4                     u1127:
   765     01D4  0BB5               	decfsz	??_main,f
   766     01D5  29D4               	goto	u1127
   767     01D6  0BB6               	decfsz	??_main+1,f
   768     01D7  29D4               	goto	u1127
   769     01D8  0BB7               	decfsz	??_main+2,f
   770     01D9  29D4               	goto	u1127
   771     01DA                     l1495:
   772                           
   773                           ;Prelab_8.c: 80:   UART_Print(message);
   774     01DA  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
   775     01DB  00F4               	movwf	UART_Print@data
   776     01DC  3080               	movlw	128
   777     01DD  00F5               	movwf	UART_Print@data+1
   778     01DE  120A  118A  2463  120A  118A  	fcall	_UART_Print
   779     01E3                     l1497:
   780                           
   781                           ;Prelab_8.c: 82:   _delay((unsigned long)((1000)*(8000000/4000.0)));
   782     01E3  300B               	movlw	11
   783     01E4  1283               	bcf	3,5	;RP0=0, select bank0
   784     01E5  1303               	bcf	3,6	;RP1=0, select bank0
   785     01E6  00B7               	movwf	??_main+2
   786     01E7  3026               	movlw	38
   787     01E8  00B6               	movwf	??_main+1
   788     01E9  305D               	movlw	93
   789     01EA  00B5               	movwf	??_main
   790     01EB                     u1137:
   791     01EB  0BB5               	decfsz	??_main,f
   792     01EC  29EB               	goto	u1137
   793     01ED  0BB6               	decfsz	??_main+1,f
   794     01EE  29EB               	goto	u1137
   795     01EF  0BB7               	decfsz	??_main+2,f
   796     01F0  29EB               	goto	u1137
   797     01F1                     l1499:
   798                           
   799                           ;Prelab_8.c: 84:   UART_Print("\r\n");
   800     01F1  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
   801     01F2  00F4               	movwf	UART_Print@data
   802     01F3  3080               	movlw	128
   803     01F4  00F5               	movwf	UART_Print@data+1
   804     01F5  120A  118A  2463  120A  118A  	fcall	_UART_Print
   805     01FA                     l1501:
   806                           
   807                           ;Prelab_8.c: 85:  ADCON0bits.GO =1;
   808     01FA  1283               	bcf	3,5	;RP0=0, select bank0
   809     01FB  1303               	bcf	3,6	;RP1=0, select bank0
   810     01FC  149F               	bsf	31,1	;volatile
   811     01FD                     l1503:
   812                           
   813                           ;Prelab_8.c: 88:   {;Prelab_8.c: 89:        if (ADCON0bits.GO ==0)
   814     01FD  1283               	bcf	3,5	;RP0=0, select bank0
   815     01FE  1303               	bcf	3,6	;RP1=0, select bank0
   816     01FF  189F               	btfsc	31,1	;volatile
   817     0200  2A02               	goto	u1091
   818     0201  2A03               	goto	u1090
   819     0202                     u1091:
   820     0202  2A63               	goto	l1529
   821     0203                     u1090:
   822     0203                     l1505:
   823                           
   824                           ;Prelab_8.c: 90:      ADCON0bits.GO =1;
   825     0203  149F               	bsf	31,1	;volatile
   826     0204  2A63               	goto	l1529
   827     0205                     l1507:
   828                           
   829                           ;Prelab_8.c: 106:                valpot = ADRESH;
   830     0205  081E               	movf	30,w	;volatile
   831     0206  00C2               	movwf	_valpot
   832     0207                     l1509:
   833                           
   834                           ;Prelab_8.c: 107:                UART_Print ("\r\n");
   835     0207  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
   836     0208  00F4               	movwf	UART_Print@data
   837     0209  3080               	movlw	128
   838     020A  00F5               	movwf	UART_Print@data+1
   839     020B  120A  118A  2463  120A  118A  	fcall	_UART_Print
   840     0210                     l1511:
   841                           
   842                           ;Prelab_8.c: 108:             sprintf(text, "%03u\r\n", valpot);
   843     0210  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   844     0211  1283               	bcf	3,5	;RP0=0, select bank0
   845     0212  1303               	bcf	3,6	;RP1=0, select bank0
   846     0213  00A6               	movwf	sprintf@f
   847     0214  0842               	movf	_valpot,w
   848     0215  00B5               	movwf	??_main
   849     0216  01B6               	clrf	??_main+1
   850     0217  0835               	movf	??_main,w
   851     0218  00A7               	movwf	?_sprintf+1
   852     0219  0836               	movf	??_main+1,w
   853     021A  00A8               	movwf	?_sprintf+2
   854     021B  3038               	movlw	(low (main@text| 0))& (0+255)
   855     021C  120A  118A  2016  120A  118A  	fcall	_sprintf
   856     0221                     l1513:
   857                           
   858                           ;Prelab_8.c: 109:             UART_Print(text);
   859     0221  3038               	movlw	(low (main@text| 0))& (0+255)
   860     0222  00F4               	movwf	UART_Print@data
   861     0223  3000               	movlw	0
   862     0224  00F5               	movwf	UART_Print@data+1
   863     0225  120A  118A  2463  120A  118A  	fcall	_UART_Print
   864     022A                     l1515:
   865                           
   866                           ;Prelab_8.c: 112:               preguntas();
   867     022A  120A  118A  2509  120A  118A  	fcall	_preguntas
   868                           
   869                           ;Prelab_8.c: 113:              RCREG ='0';
   870     022F  3030               	movlw	48
   871     0230  1283               	bcf	3,5	;RP0=0, select bank0
   872     0231  1303               	bcf	3,6	;RP1=0, select bank0
   873     0232  009A               	movwf	26	;volatile
   874                           
   875                           ;Prelab_8.c: 115:              break;
   876     0233  2A79               	goto	l1531
   877     0234                     l1517:
   878                           
   879                           ;Prelab_8.c: 117:                _delay((unsigned long)((9200000)*(8000000/4000000.0)));
   880     0234  305E               	movlw	94
   881     0235  1283               	bcf	3,5	;RP0=0, select bank0
   882     0236  1303               	bcf	3,6	;RP1=0, select bank0
   883     0237  00B7               	movwf	??_main+2
   884     0238  3058               	movlw	88
   885     0239  00B6               	movwf	??_main+1
   886     023A  30D9               	movlw	217
   887     023B  00B5               	movwf	??_main
   888     023C                     u1147:
   889     023C  0BB5               	decfsz	??_main,f
   890     023D  2A3C               	goto	u1147
   891     023E  0BB6               	decfsz	??_main+1,f
   892     023F  2A3C               	goto	u1147
   893     0240  0BB7               	decfsz	??_main+2,f
   894     0241  2A3C               	goto	u1147
   895     0242  2A43               	nop2
   896     0243                     l1519:
   897                           
   898                           ;Prelab_8.c: 118:                UART_Print ("\r\n");
   899     0243  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
   900     0244  00F4               	movwf	UART_Print@data
   901     0245  3080               	movlw	128
   902     0246  00F5               	movwf	UART_Print@data+1
   903     0247  120A  118A  2463  120A  118A  	fcall	_UART_Print
   904     024C                     l1521:
   905                           
   906                           ;Prelab_8.c: 119:                UART_Print(uart_read());
   907     024C  120A  118A  24F6  120A  118A  	fcall	_uart_read
   908     0251  00F4               	movwf	UART_Print@data
   909     0252  3080               	movlw	128
   910     0253  00F5               	movwf	UART_Print@data+1
   911     0254  120A  118A  2463  120A  118A  	fcall	_UART_Print
   912     0259                     l1523:
   913                           
   914                           ;Prelab_8.c: 120:                preguntas();
   915     0259  120A  118A  2509  120A  118A  	fcall	_preguntas
   916     025E                     l1525:
   917                           
   918                           ;Prelab_8.c: 121:                RCREG ='0';
   919     025E  3030               	movlw	48
   920     025F  1283               	bcf	3,5	;RP0=0, select bank0
   921     0260  1303               	bcf	3,6	;RP1=0, select bank0
   922     0261  009A               	movwf	26	;volatile
   923                           
   924                           ;Prelab_8.c: 123:                break;
   925     0262  2A79               	goto	l1531
   926     0263                     l1529:
   927     0263  120A  118A  24F6  120A  118A  	fcall	_uart_read
   928     0268  1283               	bcf	3,5	;RP0=0, select bank0
   929     0269  1303               	bcf	3,6	;RP1=0, select bank0
   930     026A  00B5               	movwf	??_main
   931     026B  01B6               	clrf	??_main+1
   932                           
   933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   934                           ; Switch size 1, requested type "simple"
   935                           ; Number of cases is 1, Range of values is 0 to 0
   936                           ; switch strategies available:
   937                           ; Name         Instructions Cycles
   938                           ; simple_byte            4     3 (average)
   939                           ; direct_byte           11     8 (fixed)
   940                           ; jumptable            260     6 (fixed)
   941                           ;	Chosen strategy is simple_byte
   942     026C  0836               	movf	??_main+1,w
   943     026D  3A00               	xorlw	0	; case 0
   944     026E  1903               	skipnz
   945     026F  2A71               	goto	l1601
   946     0270  2A79               	goto	l1531
   947     0271                     l1601:
   948                           
   949                           ; Switch size 1, requested type "simple"
   950                           ; Number of cases is 2, Range of values is 49 to 50
   951                           ; switch strategies available:
   952                           ; Name         Instructions Cycles
   953                           ; simple_byte            7     4 (average)
   954                           ; direct_byte           17    11 (fixed)
   955                           ; jumptable            263     9 (fixed)
   956                           ;	Chosen strategy is simple_byte
   957     0271  0835               	movf	??_main,w
   958     0272  3A31               	xorlw	49	; case 49
   959     0273  1903               	skipnz
   960     0274  2A05               	goto	l1507
   961     0275  3A03               	xorlw	3	; case 50
   962     0276  1903               	skipnz
   963     0277  2A34               	goto	l1517
   964     0278  2A79               	goto	l1531
   965     0279                     l1531:
   966                           
   967                           ;Prelab_8.c: 127:     if ( UART_Data_Ready() )
   968     0279  120A  118A  2548  120A  118A  	fcall	_UART_Data_Ready
   969     027E  1C03               	btfss	3,0
   970     027F  2A81               	goto	u1101
   971     0280  2A82               	goto	u1100
   972     0281                     u1101:
   973     0281  29FD               	goto	l1503
   974     0282                     u1100:
   975     0282                     l1533:
   976                           
   977                           ;Prelab_8.c: 128:     {;Prelab_8.c: 129:       uint8_t c = UART_GetC();
   978     0282  120A  118A  252E  120A  118A  	fcall	_UART_GetC
   979     0287  1283               	bcf	3,5	;RP0=0, select bank0
   980     0288  1303               	bcf	3,6	;RP1=0, select bank0
   981     0289  00C1               	movwf	main@c
   982     028A                     l1535:
   983                           
   984                           ;Prelab_8.c: 130:       UART_PutC(c);
   985     028A  0841               	movf	main@c,w
   986     028B  120A  118A  253C  120A  118A  	fcall	_UART_PutC
   987     0290  29FD               	goto	l1503
   988     0291  120A  118A  280C   	ljmp	start
   989     0294                     __end_of_main:
   990                           
   991                           	psect	text1
   992     04F6                     __ptext1:	
   993 ;; *************** function _uart_read *****************
   994 ;; Defined at:
   995 ;;		line 54 in file "Prelab_8.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      unsigned char 
  1002 ;; Registers used:
  1003 ;;		wreg
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 1
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023     04F6                     _uart_read:	
  1024                           ;psect for function _uart_read
  1025                           
  1026     04F6                     l1299:	
  1027                           ;incstack = 0
  1028                           ; Regs used in _uart_read: [wreg]
  1029                           
  1030                           
  1031                           ;Prelab_8.c: 55:  if(PIR1bits.RCIF== 0){
  1032     04F6  1283               	bcf	3,5	;RP0=0, select bank0
  1033     04F7  1303               	bcf	3,6	;RP1=0, select bank0
  1034     04F8  1A8C               	btfsc	12,5	;volatile
  1035     04F9  2CFB               	goto	u841
  1036     04FA  2CFC               	goto	u840
  1037     04FB                     u841:
  1038     04FB  2D07               	goto	l1311
  1039     04FC                     u840:
  1040     04FC                     l1301:
  1041                           
  1042                           ;Prelab_8.c: 56:      if (RCSTAbits.OERR){
  1043     04FC  1C98               	btfss	24,1	;volatile
  1044     04FD  2CFF               	goto	u851
  1045     04FE  2D00               	goto	u850
  1046     04FF                     u851:
  1047     04FF  2D05               	goto	l1305
  1048     0500                     u850:
  1049     0500                     l1303:
  1050                           
  1051                           ;Prelab_8.c: 57:          RCSTAbits.CREN =0;
  1052     0500  1218               	bcf	24,4	;volatile
  1053                           
  1054                           ;Prelab_8.c: 58:          __nop();
  1055     0501  0000               	nop
  1056                           
  1057                           ;Prelab_8.c: 59:          RCSTAbits.CREN =1;
  1058     0502  1283               	bcf	3,5	;RP0=0, select bank0
  1059     0503  1303               	bcf	3,6	;RP1=0, select bank0
  1060     0504  1618               	bsf	24,4	;volatile
  1061     0505                     l1305:
  1062                           
  1063                           ;Prelab_8.c: 61:      return RCREG;
  1064     0505  081A               	movf	26,w	;volatile
  1065     0506  2D08               	goto	l60
  1066     0507                     l1311:
  1067                           
  1068                           ;Prelab_8.c: 64:      return 0;
  1069     0507  3000               	movlw	0
  1070     0508                     l60:
  1071     0508  0008               	return
  1072     0509                     __end_of_uart_read:
  1073                           
  1074                           	psect	text2
  1075     0016                     __ptext2:	
  1076 ;; *************** function _sprintf *****************
  1077 ;; Defined at:
  1078 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  sp              1    wreg     PTR unsigned char 
  1081 ;;		 -> main@text(9), 
  1082 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  1083 ;;		 -> STR_4(7), 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1086 ;;		 -> main@text(9), 
  1087 ;;  tmpval          4    0        struct .
  1088 ;;  width           2   18[BANK0 ] int 
  1089 ;;  val             2   14[BANK0 ] unsigned int 
  1090 ;;  cp              2    0        PTR const unsigned char 
  1091 ;;  len             2    0        unsigned int 
  1092 ;;  c               1   20[BANK0 ] unsigned char 
  1093 ;;  prec            1   16[BANK0 ] char 
  1094 ;;  flag            1   13[BANK0 ] unsigned char 
  1095 ;;  ap              1   12[BANK0 ] PTR void [1]
  1096 ;;		 -> ?_sprintf(2), 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  2    6[BANK0 ] int 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       3       0       0       0
  1107 ;;      Locals:         0       9       0       0       0
  1108 ;;      Temps:          0       3       0       0       0
  1109 ;;      Totals:         0      15       0       0       0
  1110 ;;Total ram usage:       15 bytes
  1111 ;; Hardware stack levels used: 1
  1112 ;; Hardware stack levels required when called: 2
  1113 ;; This function calls:
  1114 ;;		___lwdiv
  1115 ;;		___lwmod
  1116 ;;		___wmul
  1117 ;;		_isdigit
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123     0016                     _sprintf:	
  1124                           ;psect for function _sprintf
  1125                           
  1126                           
  1127                           ;incstack = 0
  1128                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1129                           ;sprintf@sp stored from wreg
  1130     0016  1283               	bcf	3,5	;RP0=0, select bank0
  1131     0017  1303               	bcf	3,6	;RP1=0, select bank0
  1132     0018  00B1               	movwf	sprintf@sp
  1133     0019                     l1359:
  1134                           
  1135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1136     0019  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1137     001A  00AC               	movwf	sprintf@ap
  1138                           
  1139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1140     001B  2987               	goto	l1443
  1141     001C                     l1361:
  1142                           
  1143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1144     001C  3025               	movlw	37
  1145     001D  0634               	xorwf	sprintf@c,w
  1146     001E  1903               	btfsc	3,2
  1147     001F  2821               	goto	u911
  1148     0020  2822               	goto	u910
  1149     0021                     u911:
  1150     0021  282C               	goto	l1367
  1151     0022                     u910:
  1152     0022                     l1363:
  1153                           
  1154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1155     0022  0831               	movf	sprintf@sp,w
  1156     0023  0084               	movwf	4
  1157     0024  0834               	movf	sprintf@c,w
  1158     0025  1383               	bcf	3,7	;select IRP bank0
  1159     0026  0080               	movwf	0
  1160     0027                     l1365:
  1161     0027  3001               	movlw	1
  1162     0028  00A9               	movwf	??_sprintf
  1163     0029  0829               	movf	??_sprintf,w
  1164     002A  07B1               	addwf	sprintf@sp,f
  1165                           
  1166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1167     002B  2987               	goto	l1443
  1168     002C                     l1367:
  1169                           
  1170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1171     002C  01B2               	clrf	sprintf@width
  1172     002D  01B3               	clrf	sprintf@width+1
  1173                           
  1174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1175     002E  01AD               	clrf	sprintf@flag
  1176     002F  2835               	goto	l1373
  1177     0030                     l232:	
  1178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1179                           
  1180                           
  1181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1182     0030  152D               	bsf	sprintf@flag,2
  1183     0031                     l1369:
  1184                           
  1185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1186     0031  3001               	movlw	1
  1187     0032  00A9               	movwf	??_sprintf
  1188     0033  0829               	movf	??_sprintf,w
  1189     0034  07A6               	addwf	sprintf@f,f
  1190     0035                     l1373:	
  1191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1192                           
  1193     0035  0826               	movf	sprintf@f,w
  1194     0036  0084               	movwf	4
  1195     0037  120A  118A  23A6  120A  118A  	fcall	stringdir
  1196     003C  00A9               	movwf	??_sprintf
  1197     003D  01AA               	clrf	??_sprintf+1
  1198                           
  1199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1200                           ; Switch size 1, requested type "simple"
  1201                           ; Number of cases is 1, Range of values is 0 to 0
  1202                           ; switch strategies available:
  1203                           ; Name         Instructions Cycles
  1204                           ; simple_byte            4     3 (average)
  1205                           ; direct_byte           11     8 (fixed)
  1206                           ; jumptable            260     6 (fixed)
  1207                           ;	Chosen strategy is simple_byte
  1208     003E  082A               	movf	??_sprintf+1,w
  1209     003F  3A00               	xorlw	0	; case 0
  1210     0040  1903               	skipnz
  1211     0041  2843               	goto	l1603
  1212     0042  2848               	goto	l1375
  1213     0043                     l1603:
  1214                           
  1215                           ; Switch size 1, requested type "simple"
  1216                           ; Number of cases is 1, Range of values is 48 to 48
  1217                           ; switch strategies available:
  1218                           ; Name         Instructions Cycles
  1219                           ; simple_byte            4     3 (average)
  1220                           ; direct_byte           14    11 (fixed)
  1221                           ; jumptable            263     9 (fixed)
  1222                           ;	Chosen strategy is simple_byte
  1223     0043  0829               	movf	??_sprintf,w
  1224     0044  3A30               	xorlw	48	; case 48
  1225     0045  1903               	skipnz
  1226     0046  2830               	goto	l232
  1227     0047  2848               	goto	l1375
  1228     0048                     l1375:
  1229                           
  1230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1231     0048  0826               	movf	sprintf@f,w
  1232     0049  0084               	movwf	4
  1233     004A  120A  118A  23A6  120A  118A  	fcall	stringdir
  1234     004F  120A  118A  251C  120A  118A  	fcall	_isdigit
  1235     0054  1C03               	btfss	3,0
  1236     0055  2857               	goto	u921
  1237     0056  2858               	goto	u920
  1238     0057                     u921:
  1239     0057  289E               	goto	l1391
  1240     0058                     u920:
  1241     0058                     l1377:
  1242                           
  1243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1244     0058  1283               	bcf	3,5	;RP0=0, select bank0
  1245     0059  1303               	bcf	3,6	;RP1=0, select bank0
  1246     005A  01B2               	clrf	sprintf@width
  1247     005B  01B3               	clrf	sprintf@width+1
  1248     005C                     l1379:
  1249                           
  1250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1251     005C  300A               	movlw	10
  1252     005D  00F3               	movwf	___wmul@multiplier
  1253     005E  3000               	movlw	0
  1254     005F  00F4               	movwf	___wmul@multiplier+1
  1255     0060  1283               	bcf	3,5	;RP0=0, select bank0
  1256     0061  1303               	bcf	3,6	;RP1=0, select bank0
  1257     0062  0833               	movf	sprintf@width+1,w
  1258     0063  00F6               	movwf	___wmul@multiplicand+1
  1259     0064  0832               	movf	sprintf@width,w
  1260     0065  00F5               	movwf	___wmul@multiplicand
  1261     0066  120A  118A  2496  120A  118A  	fcall	___wmul
  1262     006B  0874               	movf	?___wmul+1,w
  1263     006C  1283               	bcf	3,5	;RP0=0, select bank0
  1264     006D  1303               	bcf	3,6	;RP1=0, select bank0
  1265     006E  00B3               	movwf	sprintf@width+1
  1266     006F  0873               	movf	?___wmul,w
  1267     0070  00B2               	movwf	sprintf@width
  1268     0071                     l1381:
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1271     0071  0826               	movf	sprintf@f,w
  1272     0072  0084               	movwf	4
  1273     0073  120A  118A  23A6  120A  118A  	fcall	stringdir
  1274     0078  3ED0               	addlw	208
  1275     0079  00A9               	movwf	??_sprintf
  1276     007A  30FF               	movlw	255
  1277     007B  1803               	skipnc
  1278     007C  3000               	movlw	0
  1279     007D  00AA               	movwf	??_sprintf+1
  1280     007E  0829               	movf	??_sprintf,w
  1281     007F  07B2               	addwf	sprintf@width,f
  1282     0080  1803               	skipnc
  1283     0081  0AB3               	incf	sprintf@width+1,f
  1284     0082  082A               	movf	??_sprintf+1,w
  1285     0083  07B3               	addwf	sprintf@width+1,f
  1286     0084                     l1383:
  1287     0084  3001               	movlw	1
  1288     0085  00A9               	movwf	??_sprintf
  1289     0086  0829               	movf	??_sprintf,w
  1290     0087  07A6               	addwf	sprintf@f,f
  1291     0088                     l1385:
  1292                           
  1293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1294     0088  0826               	movf	sprintf@f,w
  1295     0089  0084               	movwf	4
  1296     008A  120A  118A  23A6  120A  118A  	fcall	stringdir
  1297     008F  120A  118A  251C  120A  118A  	fcall	_isdigit
  1298     0094  1803               	btfsc	3,0
  1299     0095  2897               	goto	u931
  1300     0096  2898               	goto	u930
  1301     0097                     u931:
  1302     0097  285C               	goto	l1379
  1303     0098                     u930:
  1304     0098  289E               	goto	l1391
  1305     0099                     l1387:
  1306                           
  1307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1308     0099  30C0               	movlw	192
  1309     009A  00A9               	movwf	??_sprintf
  1310     009B  0829               	movf	??_sprintf,w
  1311     009C  04AD               	iorwf	sprintf@flag,f
  1312                           
  1313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1314     009D  28BA               	goto	l1393
  1315     009E                     l1391:
  1316     009E  3001               	movlw	1
  1317     009F  1283               	bcf	3,5	;RP0=0, select bank0
  1318     00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1319     00A1  07A6               	addwf	sprintf@f,f
  1320     00A2  30FF               	movlw	-1
  1321     00A3  0726               	addwf	sprintf@f,w
  1322     00A4  0084               	movwf	4
  1323     00A5  120A  118A  23A6  120A  118A  	fcall	stringdir
  1324     00AA  00B4               	movwf	sprintf@c
  1325     00AB  00A9               	movwf	??_sprintf
  1326     00AC  01AA               	clrf	??_sprintf+1
  1327                           
  1328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1329                           ; Switch size 1, requested type "simple"
  1330                           ; Number of cases is 1, Range of values is 0 to 0
  1331                           ; switch strategies available:
  1332                           ; Name         Instructions Cycles
  1333                           ; simple_byte            4     3 (average)
  1334                           ; direct_byte           11     8 (fixed)
  1335                           ; jumptable            260     6 (fixed)
  1336                           ;	Chosen strategy is simple_byte
  1337     00AD  082A               	movf	??_sprintf+1,w
  1338     00AE  3A00               	xorlw	0	; case 0
  1339     00AF  1903               	skipnz
  1340     00B0  28B2               	goto	l1605
  1341     00B1  2987               	goto	l1443
  1342     00B2                     l1605:
  1343                           
  1344                           ; Switch size 1, requested type "simple"
  1345                           ; Number of cases is 2, Range of values is 0 to 117
  1346                           ; switch strategies available:
  1347                           ; Name         Instructions Cycles
  1348                           ; simple_byte            7     4 (average)
  1349                           ; jumptable            260     6 (fixed)
  1350                           ;	Chosen strategy is simple_byte
  1351     00B2  0829               	movf	??_sprintf,w
  1352     00B3  3A00               	xorlw	0	; case 0
  1353     00B4  1903               	skipnz
  1354     00B5  2997               	goto	l1445
  1355     00B6  3A75               	xorlw	117	; case 117
  1356     00B7  1903               	skipnz
  1357     00B8  2899               	goto	l1387
  1358     00B9  2987               	goto	l1443
  1359     00BA                     l1393:
  1360                           
  1361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1362     00BA  082C               	movf	sprintf@ap,w
  1363     00BB  0084               	movwf	4
  1364     00BC  1383               	bcf	3,7	;select IRP bank0
  1365     00BD  0800               	movf	0,w
  1366     00BE  00AE               	movwf	sprintf@val
  1367     00BF  0A84               	incf	4,f
  1368     00C0  0800               	movf	0,w
  1369     00C1  00AF               	movwf	sprintf@val+1
  1370     00C2                     l1395:
  1371     00C2  3002               	movlw	2
  1372     00C3  00A9               	movwf	??_sprintf
  1373     00C4  0829               	movf	??_sprintf,w
  1374     00C5  07AC               	addwf	sprintf@ap,f
  1375     00C6                     l1397:
  1376                           
  1377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1378     00C6  01B4               	clrf	sprintf@c
  1379     00C7  0AB4               	incf	sprintf@c,f
  1380     00C8                     l1403:
  1381                           
  1382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1383     00C8  0834               	movf	sprintf@c,w
  1384     00C9  00A9               	movwf	??_sprintf
  1385     00CA  0729               	addwf	??_sprintf,w
  1386     00CB  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1387     00CC  0084               	movwf	4
  1388     00CD  120A  118A  23A6  120A  118A  	fcall	stringdir
  1389     00D2  00AA               	movwf	??_sprintf+1
  1390     00D3  120A  118A  23A6  120A  118A  	fcall	stringdir
  1391     00D8  00AB               	movwf	??_sprintf+2
  1392     00D9  082B               	movf	??_sprintf+2,w
  1393     00DA  022F               	subwf	sprintf@val+1,w
  1394     00DB  1D03               	skipz
  1395     00DC  28DF               	goto	u945
  1396     00DD  082A               	movf	??_sprintf+1,w
  1397     00DE  022E               	subwf	sprintf@val,w
  1398     00DF                     u945:
  1399     00DF  1803               	skipnc
  1400     00E0  28E2               	goto	u941
  1401     00E1  28E3               	goto	u940
  1402     00E2                     u941:
  1403     00E2  28E4               	goto	l1407
  1404     00E3                     u940:
  1405     00E3  28EE               	goto	l1409
  1406     00E4                     l1407:
  1407     00E4  3001               	movlw	1
  1408     00E5  00A9               	movwf	??_sprintf
  1409     00E6  0829               	movf	??_sprintf,w
  1410     00E7  07B4               	addwf	sprintf@c,f
  1411     00E8  3005               	movlw	5
  1412     00E9  0634               	xorwf	sprintf@c,w
  1413     00EA  1D03               	btfss	3,2
  1414     00EB  28ED               	goto	u951
  1415     00EC  28EE               	goto	u950
  1416     00ED                     u951:
  1417     00ED  28C8               	goto	l1403
  1418     00EE                     u950:
  1419     00EE                     l1409:
  1420                           
  1421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1422     00EE  0833               	movf	sprintf@width+1,w
  1423     00EF  3A80               	xorlw	128
  1424     00F0  3C80               	sublw	128
  1425     00F1  1D03               	skipz
  1426     00F2  28F5               	goto	u965
  1427     00F3  0832               	movf	sprintf@width,w
  1428     00F4  0234               	subwf	sprintf@c,w
  1429     00F5                     u965:
  1430     00F5  1803               	skipnc
  1431     00F6  28F8               	goto	u961
  1432     00F7  28F9               	goto	u960
  1433     00F8                     u961:
  1434     00F8  2905               	goto	l1413
  1435     00F9                     u960:
  1436     00F9                     l1411:
  1437                           
  1438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1439     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1440     00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1441     00FB  0834               	movf	sprintf@c,w
  1442     00FC  00A9               	movwf	??_sprintf
  1443     00FD  01AA               	clrf	??_sprintf+1
  1444     00FE  0829               	movf	??_sprintf,w
  1445     00FF  02B2               	subwf	sprintf@width,f
  1446     0100  082A               	movf	??_sprintf+1,w
  1447     0101  1C03               	skipc
  1448     0102  03B3               	decf	sprintf@width+1,f
  1449     0103  02B3               	subwf	sprintf@width+1,f
  1450     0104  2909               	goto	l1415
  1451     0105                     l1413:
  1452                           
  1453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1454     0105  1283               	bcf	3,5	;RP0=0, select bank0
  1455     0106  1303               	bcf	3,6	;RP1=0, select bank0
  1456     0107  01B2               	clrf	sprintf@width
  1457     0108  01B3               	clrf	sprintf@width+1
  1458     0109                     l1415:
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1461     0109  1D2D               	btfss	sprintf@flag,2
  1462     010A  290C               	goto	u971
  1463     010B  290D               	goto	u970
  1464     010C                     u971:
  1465     010C  2929               	goto	l1425
  1466     010D                     u970:
  1467     010D                     l1417:
  1468                           
  1469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1470     010D  0832               	movf	sprintf@width,w
  1471     010E  0433               	iorwf	sprintf@width+1,w
  1472     010F  1903               	btfsc	3,2
  1473     0110  2912               	goto	u981
  1474     0111  2913               	goto	u980
  1475     0112                     u981:
  1476     0112  2944               	goto	l1433
  1477     0113                     u980:
  1478     0113                     l1419:
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  1481     0113  0831               	movf	sprintf@sp,w
  1482     0114  0084               	movwf	4
  1483     0115  3030               	movlw	48
  1484     0116  1383               	bcf	3,7	;select IRP bank0
  1485     0117  0080               	movwf	0
  1486     0118                     l1421:
  1487     0118  3001               	movlw	1
  1488     0119  00A9               	movwf	??_sprintf
  1489     011A  0829               	movf	??_sprintf,w
  1490     011B  07B1               	addwf	sprintf@sp,f
  1491     011C                     l1423:
  1492     011C  30FF               	movlw	255
  1493     011D  07B2               	addwf	sprintf@width,f
  1494     011E  1803               	skipnc
  1495     011F  0AB3               	incf	sprintf@width+1,f
  1496     0120  30FF               	movlw	255
  1497     0121  07B3               	addwf	sprintf@width+1,f
  1498     0122  0832               	movf	sprintf@width,w
  1499     0123  0433               	iorwf	sprintf@width+1,w
  1500     0124  1D03               	btfss	3,2
  1501     0125  2927               	goto	u991
  1502     0126  2928               	goto	u990
  1503     0127                     u991:
  1504     0127  2913               	goto	l1419
  1505     0128                     u990:
  1506     0128  2944               	goto	l1433
  1507     0129                     l1425:
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1510     0129  0832               	movf	sprintf@width,w
  1511     012A  0433               	iorwf	sprintf@width+1,w
  1512     012B  1903               	btfsc	3,2
  1513     012C  292E               	goto	u1001
  1514     012D  292F               	goto	u1000
  1515     012E                     u1001:
  1516     012E  2944               	goto	l1433
  1517     012F                     u1000:
  1518     012F                     l1427:
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1521     012F  0831               	movf	sprintf@sp,w
  1522     0130  0084               	movwf	4
  1523     0131  3020               	movlw	32
  1524     0132  1383               	bcf	3,7	;select IRP bank0
  1525     0133  0080               	movwf	0
  1526     0134                     l1429:
  1527     0134  3001               	movlw	1
  1528     0135  00A9               	movwf	??_sprintf
  1529     0136  0829               	movf	??_sprintf,w
  1530     0137  07B1               	addwf	sprintf@sp,f
  1531     0138                     l1431:
  1532     0138  30FF               	movlw	255
  1533     0139  07B2               	addwf	sprintf@width,f
  1534     013A  1803               	skipnc
  1535     013B  0AB3               	incf	sprintf@width+1,f
  1536     013C  30FF               	movlw	255
  1537     013D  07B3               	addwf	sprintf@width+1,f
  1538     013E  0832               	movf	sprintf@width,w
  1539     013F  0433               	iorwf	sprintf@width+1,w
  1540     0140  1D03               	btfss	3,2
  1541     0141  2943               	goto	u1011
  1542     0142  2944               	goto	u1010
  1543     0143                     u1011:
  1544     0143  292F               	goto	l1427
  1545     0144                     u1010:
  1546     0144                     l1433:
  1547                           
  1548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1549     0144  0834               	movf	sprintf@c,w
  1550     0145  00B0               	movwf	sprintf@prec
  1551                           
  1552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1553     0146  297E               	goto	l1441
  1554     0147                     l1435:
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1557     0147  300A               	movlw	10
  1558     0148  00A0               	movwf	___lwmod@divisor
  1559     0149  3000               	movlw	0
  1560     014A  00A1               	movwf	___lwmod@divisor+1
  1561     014B  0830               	movf	sprintf@prec,w
  1562     014C  00A9               	movwf	??_sprintf
  1563     014D  0729               	addwf	??_sprintf,w
  1564     014E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1565     014F  0084               	movwf	4
  1566     0150  120A  118A  23A6  120A  118A  	fcall	stringdir
  1567     0155  00F3               	movwf	___lwdiv@divisor
  1568     0156  120A  118A  23A6  120A  118A  	fcall	stringdir
  1569     015B  00F4               	movwf	___lwdiv@divisor+1
  1570     015C  082F               	movf	sprintf@val+1,w
  1571     015D  00F6               	movwf	___lwdiv@dividend+1
  1572     015E  082E               	movf	sprintf@val,w
  1573     015F  00F5               	movwf	___lwdiv@dividend
  1574     0160  120A  118A  23E3  120A  118A  	fcall	___lwdiv
  1575     0165  0874               	movf	?___lwdiv+1,w
  1576     0166  1283               	bcf	3,5	;RP0=0, select bank0
  1577     0167  1303               	bcf	3,6	;RP1=0, select bank0
  1578     0168  00A3               	movwf	___lwmod@dividend+1
  1579     0169  0873               	movf	?___lwdiv,w
  1580     016A  00A2               	movwf	___lwmod@dividend
  1581     016B  120A  118A  2427  120A  118A  	fcall	___lwmod
  1582     0170  1283               	bcf	3,5	;RP0=0, select bank0
  1583     0171  1303               	bcf	3,6	;RP1=0, select bank0
  1584     0172  0820               	movf	?___lwmod,w
  1585     0173  3E30               	addlw	48
  1586     0174  00B4               	movwf	sprintf@c
  1587     0175                     l1437:
  1588                           
  1589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1590     0175  0831               	movf	sprintf@sp,w
  1591     0176  0084               	movwf	4
  1592     0177  0834               	movf	sprintf@c,w
  1593     0178  1383               	bcf	3,7	;select IRP bank0
  1594     0179  0080               	movwf	0
  1595     017A                     l1439:
  1596     017A  3001               	movlw	1
  1597     017B  00A9               	movwf	??_sprintf
  1598     017C  0829               	movf	??_sprintf,w
  1599     017D  07B1               	addwf	sprintf@sp,f
  1600     017E                     l1441:
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1603     017E  30FF               	movlw	255
  1604     017F  00A9               	movwf	??_sprintf
  1605     0180  0829               	movf	??_sprintf,w
  1606     0181  07B0               	addwf	sprintf@prec,f
  1607     0182  0A30               	incf	sprintf@prec,w
  1608     0183  1D03               	btfss	3,2
  1609     0184  2986               	goto	u1021
  1610     0185  2987               	goto	u1020
  1611     0186                     u1021:
  1612     0186  2947               	goto	l1435
  1613     0187                     u1020:
  1614     0187                     l1443:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1617     0187  3001               	movlw	1
  1618     0188  07A6               	addwf	sprintf@f,f
  1619     0189  30FF               	movlw	-1
  1620     018A  0726               	addwf	sprintf@f,w
  1621     018B  0084               	movwf	4
  1622     018C  120A  118A  23A6  120A  118A  	fcall	stringdir
  1623     0191  00B4               	movwf	sprintf@c
  1624     0192  0834               	movf	sprintf@c,w
  1625     0193  1D03               	btfss	3,2
  1626     0194  2996               	goto	u1031
  1627     0195  2997               	goto	u1030
  1628     0196                     u1031:
  1629     0196  281C               	goto	l1361
  1630     0197                     u1030:
  1631     0197                     l1445:
  1632                           
  1633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1634     0197  0831               	movf	sprintf@sp,w
  1635     0198  0084               	movwf	4
  1636     0199  1383               	bcf	3,7	;select IRP bank0
  1637     019A  0180               	clrf	0
  1638     019B                     l262:
  1639     019B  0008               	return
  1640     019C                     __end_of_sprintf:
  1641                           
  1642                           	psect	text3
  1643     051C                     __ptext3:	
  1644 ;; *************** function _isdigit *****************
  1645 ;; Defined at:
  1646 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  c               1    wreg     unsigned char 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  c               1    4[COMMON] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;		None               void
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1660 ;;      Params:         0       0       0       0       0
  1661 ;;      Locals:         2       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0
  1663 ;;      Totals:         2       0       0       0       0
  1664 ;;Total ram usage:        2 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 1
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_sprintf
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674     051C                     _isdigit:	
  1675                           ;psect for function _isdigit
  1676                           
  1677                           
  1678                           ;incstack = 0
  1679                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1680                           ;isdigit@c stored from wreg
  1681     051C  00F4               	movwf	isdigit@c
  1682     051D                     l1201:
  1683     051D  01F3               	clrf	_isdigit$795
  1684     051E                     l1203:
  1685     051E  303A               	movlw	58
  1686     051F  0274               	subwf	isdigit@c,w
  1687     0520  1803               	skipnc
  1688     0521  2D23               	goto	u581
  1689     0522  2D24               	goto	u580
  1690     0523                     u581:
  1691     0523  2D2C               	goto	l1209
  1692     0524                     u580:
  1693     0524                     l1205:
  1694     0524  3030               	movlw	48
  1695     0525  0274               	subwf	isdigit@c,w
  1696     0526  1C03               	skipc
  1697     0527  2D29               	goto	u591
  1698     0528  2D2A               	goto	u590
  1699     0529                     u591:
  1700     0529  2D2C               	goto	l1209
  1701     052A                     u590:
  1702     052A                     l1207:
  1703     052A  01F3               	clrf	_isdigit$795
  1704     052B  0AF3               	incf	_isdigit$795,f
  1705     052C                     l1209:
  1706     052C  0C73               	rrf	_isdigit$795,w
  1707     052D                     l719:
  1708     052D  0008               	return
  1709     052E                     __end_of_isdigit:
  1710                           
  1711                           	psect	text4
  1712     0496                     __ptext4:	
  1713 ;; *************** function ___wmul *****************
  1714 ;; Defined at:
  1715 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  multiplier      2    3[COMMON] unsigned int 
  1718 ;;  multiplicand    2    5[COMMON] unsigned int 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  product         2    7[COMMON] unsigned int 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  2    3[COMMON] unsigned int 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         4       0       0       0       0
  1731 ;;      Locals:         2       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0
  1733 ;;      Totals:         6       0       0       0       0
  1734 ;;Total ram usage:        6 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 1
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_sprintf
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744     0496                     ___wmul:	
  1745                           ;psect for function ___wmul
  1746                           
  1747     0496                     l1213:	
  1748                           ;incstack = 0
  1749                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1750                           
  1751     0496  01F7               	clrf	___wmul@product
  1752     0497  01F8               	clrf	___wmul@product+1
  1753     0498                     l1215:
  1754     0498  1C73               	btfss	___wmul@multiplier,0
  1755     0499  2C9B               	goto	u601
  1756     049A  2C9C               	goto	u600
  1757     049B                     u601:
  1758     049B  2CA2               	goto	l266
  1759     049C                     u600:
  1760     049C                     l1217:
  1761     049C  0875               	movf	___wmul@multiplicand,w
  1762     049D  07F7               	addwf	___wmul@product,f
  1763     049E  1803               	skipnc
  1764     049F  0AF8               	incf	___wmul@product+1,f
  1765     04A0  0876               	movf	___wmul@multiplicand+1,w
  1766     04A1  07F8               	addwf	___wmul@product+1,f
  1767     04A2                     l266:
  1768     04A2  3001               	movlw	1
  1769     04A3                     u615:
  1770     04A3  1003               	clrc
  1771     04A4  0DF5               	rlf	___wmul@multiplicand,f
  1772     04A5  0DF6               	rlf	___wmul@multiplicand+1,f
  1773     04A6  3EFF               	addlw	-1
  1774     04A7  1D03               	skipz
  1775     04A8  2CA3               	goto	u615
  1776     04A9                     l1219:
  1777     04A9  3001               	movlw	1
  1778     04AA                     u625:
  1779     04AA  1003               	clrc
  1780     04AB  0CF4               	rrf	___wmul@multiplier+1,f
  1781     04AC  0CF3               	rrf	___wmul@multiplier,f
  1782     04AD  3EFF               	addlw	-1
  1783     04AE  1D03               	skipz
  1784     04AF  2CAA               	goto	u625
  1785     04B0                     l1221:
  1786     04B0  0873               	movf	___wmul@multiplier,w
  1787     04B1  0474               	iorwf	___wmul@multiplier+1,w
  1788     04B2  1D03               	btfss	3,2
  1789     04B3  2CB5               	goto	u631
  1790     04B4  2CB6               	goto	u630
  1791     04B5                     u631:
  1792     04B5  2C98               	goto	l1215
  1793     04B6                     u630:
  1794     04B6                     l1223:
  1795     04B6  0878               	movf	___wmul@product+1,w
  1796     04B7  00F4               	movwf	?___wmul+1
  1797     04B8  0877               	movf	___wmul@product,w
  1798     04B9  00F3               	movwf	?___wmul
  1799     04BA                     l268:
  1800     04BA  0008               	return
  1801     04BB                     __end_of___wmul:
  1802                           
  1803                           	psect	text5
  1804     0427                     __ptext5:	
  1805 ;; *************** function ___lwmod *****************
  1806 ;; Defined at:
  1807 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  divisor         2    0[BANK0 ] unsigned int 
  1810 ;;  dividend        2    2[BANK0 ] unsigned int 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  counter         1    5[BANK0 ] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  2    0[BANK0 ] unsigned int 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         0       4       0       0       0
  1823 ;;      Locals:         0       1       0       0       0
  1824 ;;      Temps:          0       1       0       0       0
  1825 ;;      Totals:         0       6       0       0       0
  1826 ;;Total ram usage:        6 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_sprintf
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836     0427                     ___lwmod:	
  1837                           ;psect for function ___lwmod
  1838                           
  1839     0427                     l1277:	
  1840                           ;incstack = 0
  1841                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1842                           
  1843     0427  1283               	bcf	3,5	;RP0=0, select bank0
  1844     0428  1303               	bcf	3,6	;RP1=0, select bank0
  1845     0429  0820               	movf	___lwmod@divisor,w
  1846     042A  0421               	iorwf	___lwmod@divisor+1,w
  1847     042B  1903               	btfsc	3,2
  1848     042C  2C2E               	goto	u781
  1849     042D  2C2F               	goto	u780
  1850     042E                     u781:
  1851     042E  2C5E               	goto	l1295
  1852     042F                     u780:
  1853     042F                     l1279:
  1854     042F  01A5               	clrf	___lwmod@counter
  1855     0430  0AA5               	incf	___lwmod@counter,f
  1856     0431  2C3D               	goto	l1285
  1857     0432                     l1281:
  1858     0432  3001               	movlw	1
  1859     0433                     u795:
  1860     0433  1003               	clrc
  1861     0434  0DA0               	rlf	___lwmod@divisor,f
  1862     0435  0DA1               	rlf	___lwmod@divisor+1,f
  1863     0436  3EFF               	addlw	-1
  1864     0437  1D03               	skipz
  1865     0438  2C33               	goto	u795
  1866     0439                     l1283:
  1867     0439  3001               	movlw	1
  1868     043A  00A4               	movwf	??___lwmod
  1869     043B  0824               	movf	??___lwmod,w
  1870     043C  07A5               	addwf	___lwmod@counter,f
  1871     043D                     l1285:
  1872     043D  1FA1               	btfss	___lwmod@divisor+1,7
  1873     043E  2C40               	goto	u801
  1874     043F  2C41               	goto	u800
  1875     0440                     u801:
  1876     0440  2C32               	goto	l1281
  1877     0441                     u800:
  1878     0441                     l1287:
  1879     0441  0821               	movf	___lwmod@divisor+1,w
  1880     0442  0223               	subwf	___lwmod@dividend+1,w
  1881     0443  1D03               	skipz
  1882     0444  2C47               	goto	u815
  1883     0445  0820               	movf	___lwmod@divisor,w
  1884     0446  0222               	subwf	___lwmod@dividend,w
  1885     0447                     u815:
  1886     0447  1C03               	skipc
  1887     0448  2C4A               	goto	u811
  1888     0449  2C4B               	goto	u810
  1889     044A                     u811:
  1890     044A  2C51               	goto	l1291
  1891     044B                     u810:
  1892     044B                     l1289:
  1893     044B  0820               	movf	___lwmod@divisor,w
  1894     044C  02A2               	subwf	___lwmod@dividend,f
  1895     044D  0821               	movf	___lwmod@divisor+1,w
  1896     044E  1C03               	skipc
  1897     044F  03A3               	decf	___lwmod@dividend+1,f
  1898     0450  02A3               	subwf	___lwmod@dividend+1,f
  1899     0451                     l1291:
  1900     0451  3001               	movlw	1
  1901     0452                     u825:
  1902     0452  1003               	clrc
  1903     0453  0CA1               	rrf	___lwmod@divisor+1,f
  1904     0454  0CA0               	rrf	___lwmod@divisor,f
  1905     0455  3EFF               	addlw	-1
  1906     0456  1D03               	skipz
  1907     0457  2C52               	goto	u825
  1908     0458                     l1293:
  1909     0458  3001               	movlw	1
  1910     0459  02A5               	subwf	___lwmod@counter,f
  1911     045A  1D03               	btfss	3,2
  1912     045B  2C5D               	goto	u831
  1913     045C  2C5E               	goto	u830
  1914     045D                     u831:
  1915     045D  2C41               	goto	l1287
  1916     045E                     u830:
  1917     045E                     l1295:
  1918     045E  0823               	movf	___lwmod@dividend+1,w
  1919     045F  00A1               	movwf	?___lwmod+1
  1920     0460  0822               	movf	___lwmod@dividend,w
  1921     0461  00A0               	movwf	?___lwmod
  1922     0462                     l548:
  1923     0462  0008               	return
  1924     0463                     __end_of___lwmod:
  1925                           
  1926                           	psect	text6
  1927     03E3                     __ptext6:	
  1928 ;; *************** function ___lwdiv *****************
  1929 ;; Defined at:
  1930 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  divisor         2    3[COMMON] unsigned int 
  1933 ;;  dividend        2    5[COMMON] unsigned int 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  quotient        2    8[COMMON] unsigned int 
  1936 ;;  counter         1   10[COMMON] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  2    3[COMMON] unsigned int 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1946 ;;      Params:         4       0       0       0       0
  1947 ;;      Locals:         3       0       0       0       0
  1948 ;;      Temps:          1       0       0       0       0
  1949 ;;      Totals:         8       0       0       0       0
  1950 ;;Total ram usage:        8 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 1
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_sprintf
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960     03E3                     ___lwdiv:	
  1961                           ;psect for function ___lwdiv
  1962                           
  1963     03E3                     l1251:	
  1964                           ;incstack = 0
  1965                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1966                           
  1967     03E3  01F8               	clrf	___lwdiv@quotient
  1968     03E4  01F9               	clrf	___lwdiv@quotient+1
  1969     03E5                     l1253:
  1970     03E5  0873               	movf	___lwdiv@divisor,w
  1971     03E6  0474               	iorwf	___lwdiv@divisor+1,w
  1972     03E7  1903               	btfsc	3,2
  1973     03E8  2BEA               	goto	u711
  1974     03E9  2BEB               	goto	u710
  1975     03EA                     u711:
  1976     03EA  2C22               	goto	l1273
  1977     03EB                     u710:
  1978     03EB                     l1255:
  1979     03EB  01FA               	clrf	___lwdiv@counter
  1980     03EC  0AFA               	incf	___lwdiv@counter,f
  1981     03ED  2BF9               	goto	l1261
  1982     03EE                     l1257:
  1983     03EE  3001               	movlw	1
  1984     03EF                     u725:
  1985     03EF  1003               	clrc
  1986     03F0  0DF3               	rlf	___lwdiv@divisor,f
  1987     03F1  0DF4               	rlf	___lwdiv@divisor+1,f
  1988     03F2  3EFF               	addlw	-1
  1989     03F3  1D03               	skipz
  1990     03F4  2BEF               	goto	u725
  1991     03F5                     l1259:
  1992     03F5  3001               	movlw	1
  1993     03F6  00F7               	movwf	??___lwdiv
  1994     03F7  0877               	movf	??___lwdiv,w
  1995     03F8  07FA               	addwf	___lwdiv@counter,f
  1996     03F9                     l1261:
  1997     03F9  1FF4               	btfss	___lwdiv@divisor+1,7
  1998     03FA  2BFC               	goto	u731
  1999     03FB  2BFD               	goto	u730
  2000     03FC                     u731:
  2001     03FC  2BEE               	goto	l1257
  2002     03FD                     u730:
  2003     03FD                     l1263:
  2004     03FD  3001               	movlw	1
  2005     03FE                     u745:
  2006     03FE  1003               	clrc
  2007     03FF  0DF8               	rlf	___lwdiv@quotient,f
  2008     0400  0DF9               	rlf	___lwdiv@quotient+1,f
  2009     0401  3EFF               	addlw	-1
  2010     0402  1D03               	skipz
  2011     0403  2BFE               	goto	u745
  2012     0404  0874               	movf	___lwdiv@divisor+1,w
  2013     0405  0276               	subwf	___lwdiv@dividend+1,w
  2014     0406  1D03               	skipz
  2015     0407  2C0A               	goto	u755
  2016     0408  0873               	movf	___lwdiv@divisor,w
  2017     0409  0275               	subwf	___lwdiv@dividend,w
  2018     040A                     u755:
  2019     040A  1C03               	skipc
  2020     040B  2C0D               	goto	u751
  2021     040C  2C0E               	goto	u750
  2022     040D                     u751:
  2023     040D  2C15               	goto	l1269
  2024     040E                     u750:
  2025     040E                     l1265:
  2026     040E  0873               	movf	___lwdiv@divisor,w
  2027     040F  02F5               	subwf	___lwdiv@dividend,f
  2028     0410  0874               	movf	___lwdiv@divisor+1,w
  2029     0411  1C03               	skipc
  2030     0412  03F6               	decf	___lwdiv@dividend+1,f
  2031     0413  02F6               	subwf	___lwdiv@dividend+1,f
  2032     0414                     l1267:
  2033     0414  1478               	bsf	___lwdiv@quotient,0
  2034     0415                     l1269:
  2035     0415  3001               	movlw	1
  2036     0416                     u765:
  2037     0416  1003               	clrc
  2038     0417  0CF4               	rrf	___lwdiv@divisor+1,f
  2039     0418  0CF3               	rrf	___lwdiv@divisor,f
  2040     0419  3EFF               	addlw	-1
  2041     041A  1D03               	skipz
  2042     041B  2C16               	goto	u765
  2043     041C                     l1271:
  2044     041C  3001               	movlw	1
  2045     041D  02FA               	subwf	___lwdiv@counter,f
  2046     041E  1D03               	btfss	3,2
  2047     041F  2C21               	goto	u771
  2048     0420  2C22               	goto	u770
  2049     0421                     u771:
  2050     0421  2BFD               	goto	l1263
  2051     0422                     u770:
  2052     0422                     l1273:
  2053     0422  0879               	movf	___lwdiv@quotient+1,w
  2054     0423  00F4               	movwf	?___lwdiv+1
  2055     0424  0878               	movf	___lwdiv@quotient,w
  2056     0425  00F3               	movwf	?___lwdiv
  2057     0426                     l538:
  2058     0426  0008               	return
  2059     0427                     __end_of___lwdiv:
  2060                           
  2061                           	psect	text7
  2062     04BB                     __ptext7:	
  2063 ;; *************** function _setup *****************
  2064 ;; Defined at:
  2065 ;;		line 136 in file "Prelab_8.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2079 ;;      Params:         0       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0
  2081 ;;      Temps:          1       0       0       0       0
  2082 ;;      Totals:         1       0       0       0       0
  2083 ;;Total ram usage:        1 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; Hardware stack levels required when called: 1
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093     04BB                     _setup:	
  2094                           ;psect for function _setup
  2095                           
  2096     04BB                     l1315:	
  2097                           ;incstack = 0
  2098                           ; Regs used in _setup: [wreg+status,2+status,0]
  2099                           
  2100                           
  2101                           ;Prelab_8.c: 137:     ANSEL = 0b00000011;
  2102     04BB  3003               	movlw	3
  2103     04BC  1683               	bsf	3,5	;RP0=1, select bank3
  2104     04BD  1703               	bsf	3,6	;RP1=1, select bank3
  2105     04BE  0088               	movwf	8	;volatile
  2106     04BF                     l1317:
  2107                           
  2108                           ;Prelab_8.c: 138:     ANSELH = 0;
  2109     04BF  0189               	clrf	9	;volatile
  2110     04C0                     l1319:
  2111                           
  2112                           ;Prelab_8.c: 140:     TRISA = 0xFF;
  2113     04C0  30FF               	movlw	255
  2114     04C1  1683               	bsf	3,5	;RP0=1, select bank1
  2115     04C2  1303               	bcf	3,6	;RP1=0, select bank1
  2116     04C3  0085               	movwf	5	;volatile
  2117     04C4                     l1321:
  2118                           
  2119                           ;Prelab_8.c: 144:     ADCON1bits.ADFM = 0;
  2120     04C4  139F               	bcf	31,7	;volatile
  2121     04C5                     l1323:
  2122                           
  2123                           ;Prelab_8.c: 145:     ADCON1bits.VCFG0 = 0;
  2124     04C5  121F               	bcf	31,4	;volatile
  2125     04C6                     l1325:
  2126                           
  2127                           ;Prelab_8.c: 146:     ADCON1bits.VCFG1 = 0;
  2128     04C6  129F               	bcf	31,5	;volatile
  2129     04C7                     l1327:
  2130                           
  2131                           ;Prelab_8.c: 148:     ADCON0bits.ADCS = 0b01;
  2132     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2133     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2134     04C9  081F               	movf	31,w	;volatile
  2135     04CA  393F               	andlw	-193
  2136     04CB  3840               	iorlw	64
  2137     04CC  009F               	movwf	31	;volatile
  2138     04CD                     l1329:
  2139                           
  2140                           ;Prelab_8.c: 149:     ADCON0bits.CHS = 0;
  2141     04CD  30C3               	movlw	-61
  2142     04CE  059F               	andwf	31,f	;volatile
  2143     04CF                     l1331:
  2144                           
  2145                           ;Prelab_8.c: 150:     ADCON0bits.ADON= 1;
  2146     04CF  141F               	bsf	31,0	;volatile
  2147     04D0                     l1333:
  2148                           
  2149                           ;Prelab_8.c: 151:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2150     04D0  3021               	movlw	33
  2151     04D1  00F3               	movwf	??_setup
  2152     04D2                     u1157:
  2153     04D2  0BF3               	decfsz	??_setup,f
  2154     04D3  2CD2               	goto	u1157
  2155     04D4                     l1335:
  2156                           
  2157                           ;Prelab_8.c: 153:     PIR1bits.ADIF = 0;
  2158     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2159     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2160     04D6  130C               	bcf	12,6	;volatile
  2161     04D7                     l1337:
  2162                           
  2163                           ;Prelab_8.c: 154:     PIE1bits.ADIE = 1;
  2164     04D7  1683               	bsf	3,5	;RP0=1, select bank1
  2165     04D8  1303               	bcf	3,6	;RP1=0, select bank1
  2166     04D9  170C               	bsf	12,6	;volatile
  2167     04DA                     l1339:
  2168                           
  2169                           ;Prelab_8.c: 155:     INTCONbits.PEIE = 1;
  2170     04DA  170B               	bsf	11,6	;volatile
  2171     04DB                     l1341:
  2172                           
  2173                           ;Prelab_8.c: 156:     INTCONbits.GIE = 1;
  2174     04DB  178B               	bsf	11,7	;volatile
  2175     04DC                     l78:
  2176     04DC  0008               	return
  2177     04DD                     __end_of_setup:
  2178                           
  2179                           	psect	text8
  2180     0509                     __ptext8:	
  2181 ;; *************** function _preguntas *****************
  2182 ;; Defined at:
  2183 ;;		line 159 in file "Prelab_8.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2197 ;;      Params:         0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0
  2200 ;;      Totals:         0       0       0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; Hardware stack levels required when called: 3
  2204 ;; This function calls:
  2205 ;;		_UART_Print
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211     0509                     _preguntas:	
  2212                           ;psect for function _preguntas
  2213                           
  2214     0509                     l1457:	
  2215                           ;incstack = 0
  2216                           ; Regs used in _preguntas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2217                           
  2218                           
  2219                           ;Prelab_8.c: 161:     UART_Print ("1.Leer potenciometro\r\n");
  2220     0509  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2221     050A  00F4               	movwf	UART_Print@data
  2222     050B  3080               	movlw	128
  2223     050C  00F5               	movwf	UART_Print@data+1
  2224     050D  120A  118A  2463  120A  118A  	fcall	_UART_Print
  2225                           
  2226                           ;Prelab_8.c: 162:     UART_Print (message);
  2227     0512  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  2228     0513  00F4               	movwf	UART_Print@data
  2229     0514  3080               	movlw	128
  2230     0515  00F5               	movwf	UART_Print@data+1
  2231     0516  120A  118A  2463  120A  118A  	fcall	_UART_Print
  2232     051B                     l81:
  2233     051B  0008               	return
  2234     051C                     __end_of_preguntas:
  2235                           
  2236                           	psect	text9
  2237     0463                     __ptext9:	
  2238 ;; *************** function _UART_Print *****************
  2239 ;; Defined at:
  2240 ;;		line 65 in file "USARTmodl.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  data            2    4[COMMON] PTR const unsigned char 
  2243 ;;		 -> STR_6(23), ROM(8192), STR_5(3), main@text(9), 
  2244 ;;		 -> STR_3(3), STR_2(3), message(15), STR_1(23), 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  i               1    8[COMMON] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         2       0       0       0       0
  2257 ;;      Locals:         1       0       0       0       0
  2258 ;;      Temps:          2       0       0       0       0
  2259 ;;      Totals:         5       0       0       0       0
  2260 ;;Total ram usage:        5 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; Hardware stack levels required when called: 2
  2263 ;; This function calls:
  2264 ;;		_UART_PutC
  2265 ;; This function is called by:
  2266 ;;		_main
  2267 ;;		_preguntas
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271     0463                     _UART_Print:	
  2272                           ;psect for function _UART_Print
  2273                           
  2274     0463                     l1193:	
  2275                           ;incstack = 0
  2276                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2277                           
  2278                           
  2279                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
  2280     0463  01F8               	clrf	UART_Print@i
  2281                           
  2282                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2283     0464  2C7E               	goto	l1199
  2284     0465                     l1195:
  2285                           
  2286                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
  2287     0465  0878               	movf	UART_Print@i,w
  2288     0466  00F6               	movwf	??_UART_Print
  2289     0467  01F7               	clrf	??_UART_Print+1
  2290     0468  0876               	movf	??_UART_Print,w
  2291     0469  0774               	addwf	UART_Print@data,w
  2292     046A  0084               	movwf	4
  2293     046B  0877               	movf	??_UART_Print+1,w
  2294     046C  1803               	skipnc
  2295     046D  0A77               	incf	??_UART_Print+1,w
  2296     046E  0775               	addwf	UART_Print@data+1,w
  2297     046F  00FF               	movwf	btemp+1
  2298     0470  120A  118A  239C  120A  118A  	fcall	stringtab
  2299     0475  120A  118A  253C  120A  118A  	fcall	_UART_PutC
  2300     047A                     l1197:
  2301     047A  3001               	movlw	1
  2302     047B  00F6               	movwf	??_UART_Print
  2303     047C  0876               	movf	??_UART_Print,w
  2304     047D  07F8               	addwf	UART_Print@i,f
  2305     047E                     l1199:
  2306                           
  2307                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2308     047E  0878               	movf	UART_Print@i,w
  2309     047F  00F6               	movwf	??_UART_Print
  2310     0480  01F7               	clrf	??_UART_Print+1
  2311     0481  0876               	movf	??_UART_Print,w
  2312     0482  0774               	addwf	UART_Print@data,w
  2313     0483  0084               	movwf	4
  2314     0484  0877               	movf	??_UART_Print+1,w
  2315     0485  1803               	skipnc
  2316     0486  0A77               	incf	??_UART_Print+1,w
  2317     0487  0775               	addwf	UART_Print@data+1,w
  2318     0488  1283               	bcf	3,5	;RP0=0, select bank0
  2319     0489  1303               	bcf	3,6	;RP1=0, select bank0
  2320     048A  00FF               	movwf	btemp+1
  2321     048B  120A  118A  239C  120A  118A  	fcall	stringtab
  2322     0490  3A00               	xorlw	0
  2323     0491  1D03               	skipz
  2324     0492  2C94               	goto	u571
  2325     0493  2C95               	goto	u570
  2326     0494                     u571:
  2327     0494  2C65               	goto	l1195
  2328     0495                     u570:
  2329     0495                     l134:
  2330     0495  0008               	return
  2331     0496                     __end_of_UART_Print:
  2332                           
  2333                           	psect	text10
  2334     053C                     __ptext10:	
  2335 ;; *************** function _UART_PutC *****************
  2336 ;; Defined at:
  2337 ;;		line 59 in file "USARTmodl.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  data            1    wreg     const unsigned char 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  data            1    3[COMMON] const unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         0       0       0       0       0
  2352 ;;      Locals:         1       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0
  2354 ;;      Totals:         1       0       0       0       0
  2355 ;;Total ram usage:        1 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; Hardware stack levels required when called: 1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;;		_UART_Print
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366     053C                     _UART_PutC:	
  2367                           ;psect for function _UART_PutC
  2368                           
  2369                           
  2370                           ;incstack = 0
  2371                           ; Regs used in _UART_PutC: [wreg]
  2372                           ;UART_PutC@data stored from wreg
  2373     053C  00F3               	movwf	UART_PutC@data
  2374     053D                     l1189:
  2375     053D                     l125:	
  2376                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  2377                           
  2378     053D  1683               	bsf	3,5	;RP0=1, select bank1
  2379     053E  1303               	bcf	3,6	;RP1=0, select bank1
  2380     053F  1C98               	btfss	24,1	;volatile
  2381     0540  2D42               	goto	u561
  2382     0541  2D43               	goto	u560
  2383     0542                     u561:
  2384     0542  2D3D               	goto	l125
  2385     0543                     u560:
  2386     0543                     l1191:
  2387                           
  2388                           ;USARTmodl.c: 62:   TXREG = data;
  2389     0543  0873               	movf	UART_PutC@data,w
  2390     0544  1283               	bcf	3,5	;RP0=0, select bank0
  2391     0545  1303               	bcf	3,6	;RP1=0, select bank0
  2392     0546  0099               	movwf	25	;volatile
  2393     0547                     l128:
  2394     0547  0008               	return
  2395     0548                     __end_of_UART_PutC:
  2396                           
  2397                           	psect	text11
  2398     0294                     __ptext11:	
  2399 ;; *************** function _UART_Init *****************
  2400 ;; Defined at:
  2401 ;;		line 14 in file "USARTmodl.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  baud_rate       4    6[BANK0 ] const unsigned long 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  n               2   14[BANK0 ] int 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         0       4       0       0       0
  2416 ;;      Locals:         0       2       0       0       0
  2417 ;;      Temps:          0       4       0       0       0
  2418 ;;      Totals:         0      10       0       0       0
  2419 ;;Total ram usage:       10 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 2
  2422 ;; This function calls:
  2423 ;;		___lldiv
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429     0294                     _UART_Init:	
  2430                           ;psect for function _UART_Init
  2431                           
  2432     0294                     l1343:	
  2433                           ;incstack = 0
  2434                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2435                           
  2436                           
  2437                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
  2438     0294  1283               	bcf	3,5	;RP0=0, select bank0
  2439     0295  1303               	bcf	3,6	;RP1=0, select bank0
  2440     0296  0826               	movf	UART_Init@baud_rate,w
  2441     0297  00AA               	movwf	??_UART_Init
  2442     0298  0827               	movf	UART_Init@baud_rate+1,w
  2443     0299  00AB               	movwf	??_UART_Init+1
  2444     029A  0828               	movf	UART_Init@baud_rate+2,w
  2445     029B  00AC               	movwf	??_UART_Init+2
  2446     029C  0829               	movf	UART_Init@baud_rate+3,w
  2447     029D  00AD               	movwf	??_UART_Init+3
  2448     029E  3004               	movlw	4
  2449     029F                     u865:
  2450     029F  1003               	clrc
  2451     02A0  0DAA               	rlf	??_UART_Init,f
  2452     02A1  0DAB               	rlf	??_UART_Init+1,f
  2453     02A2  0DAC               	rlf	??_UART_Init+2,f
  2454     02A3  0DAD               	rlf	??_UART_Init+3,f
  2455     02A4                     u860:
  2456     02A4  3EFF               	addlw	-1
  2457     02A5  1D03               	skipz
  2458     02A6  2A9F               	goto	u865
  2459     02A7  082D               	movf	??_UART_Init+3,w
  2460     02A8  00F6               	movwf	___lldiv@divisor+3
  2461     02A9  082C               	movf	??_UART_Init+2,w
  2462     02AA  00F5               	movwf	___lldiv@divisor+2
  2463     02AB  082B               	movf	??_UART_Init+1,w
  2464     02AC  00F4               	movwf	___lldiv@divisor+1
  2465     02AD  082A               	movf	??_UART_Init,w
  2466     02AE  00F3               	movwf	___lldiv@divisor
  2467     02AF  3000               	movlw	0
  2468     02B0  00FA               	movwf	___lldiv@dividend+3
  2469     02B1  307A               	movlw	122
  2470     02B2  00F9               	movwf	___lldiv@dividend+2
  2471     02B3  3012               	movlw	18
  2472     02B4  00F8               	movwf	___lldiv@dividend+1
  2473     02B5  3000               	movlw	0
  2474     02B6  00F7               	movwf	___lldiv@dividend
  2475     02B7  120A  118A  2334  120A  118A  	fcall	___lldiv
  2476     02BC  0873               	movf	?___lldiv,w
  2477     02BD  3EFF               	addlw	255
  2478     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2479     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2480     02C0  00AE               	movwf	UART_Init@n
  2481     02C1  0874               	movf	?___lldiv+1,w
  2482     02C2  1803               	skipnc
  2483     02C3  3E01               	addlw	1
  2484     02C4  3EFF               	addlw	255
  2485     02C5  00AF               	movwf	UART_Init@n+1
  2486     02C6                     l1345:
  2487                           
  2488                           ;USARTmodl.c: 18:   if (n < 0)
  2489     02C6  1FAF               	btfss	UART_Init@n+1,7
  2490     02C7  2AC9               	goto	u871
  2491     02C8  2ACA               	goto	u870
  2492     02C9                     u871:
  2493     02C9  2ACC               	goto	l1349
  2494     02CA                     u870:
  2495     02CA                     l1347:
  2496                           
  2497                           ;USARTmodl.c: 19:     n = 0;
  2498     02CA  01AE               	clrf	UART_Init@n
  2499     02CB  01AF               	clrf	UART_Init@n+1
  2500     02CC                     l1349:
  2501                           
  2502                           ;USARTmodl.c: 21:   if (n > 255)
  2503     02CC  082F               	movf	UART_Init@n+1,w
  2504     02CD  3A80               	xorlw	128
  2505     02CE  00FF               	movwf	btemp+1
  2506     02CF  3081               	movlw	129
  2507     02D0  027F               	subwf	btemp+1,w
  2508     02D1  1D03               	skipz
  2509     02D2  2AD5               	goto	u885
  2510     02D3  3000               	movlw	0
  2511     02D4  022E               	subwf	UART_Init@n,w
  2512     02D5                     u885:
  2513     02D5  1C03               	skipc
  2514     02D6  2AD8               	goto	u881
  2515     02D7  2AD9               	goto	u880
  2516     02D8                     u881:
  2517     02D8  2B27               	goto	l1357
  2518     02D9                     u880:
  2519     02D9                     l1351:
  2520                           
  2521                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  2522     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2523     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2524     02DB  0826               	movf	UART_Init@baud_rate,w
  2525     02DC  00AA               	movwf	??_UART_Init
  2526     02DD  0827               	movf	UART_Init@baud_rate+1,w
  2527     02DE  00AB               	movwf	??_UART_Init+1
  2528     02DF  0828               	movf	UART_Init@baud_rate+2,w
  2529     02E0  00AC               	movwf	??_UART_Init+2
  2530     02E1  0829               	movf	UART_Init@baud_rate+3,w
  2531     02E2  00AD               	movwf	??_UART_Init+3
  2532     02E3  3006               	movlw	6
  2533     02E4                     u895:
  2534     02E4  1003               	clrc
  2535     02E5  0DAA               	rlf	??_UART_Init,f
  2536     02E6  0DAB               	rlf	??_UART_Init+1,f
  2537     02E7  0DAC               	rlf	??_UART_Init+2,f
  2538     02E8  0DAD               	rlf	??_UART_Init+3,f
  2539     02E9                     u890:
  2540     02E9  3EFF               	addlw	-1
  2541     02EA  1D03               	skipz
  2542     02EB  2AE4               	goto	u895
  2543     02EC  082D               	movf	??_UART_Init+3,w
  2544     02ED  00F6               	movwf	___lldiv@divisor+3
  2545     02EE  082C               	movf	??_UART_Init+2,w
  2546     02EF  00F5               	movwf	___lldiv@divisor+2
  2547     02F0  082B               	movf	??_UART_Init+1,w
  2548     02F1  00F4               	movwf	___lldiv@divisor+1
  2549     02F2  082A               	movf	??_UART_Init,w
  2550     02F3  00F3               	movwf	___lldiv@divisor
  2551     02F4  3000               	movlw	0
  2552     02F5  00FA               	movwf	___lldiv@dividend+3
  2553     02F6  307A               	movlw	122
  2554     02F7  00F9               	movwf	___lldiv@dividend+2
  2555     02F8  3012               	movlw	18
  2556     02F9  00F8               	movwf	___lldiv@dividend+1
  2557     02FA  3000               	movlw	0
  2558     02FB  00F7               	movwf	___lldiv@dividend
  2559     02FC  120A  118A  2334  120A  118A  	fcall	___lldiv
  2560     0301  0873               	movf	?___lldiv,w
  2561     0302  3EFF               	addlw	255
  2562     0303  1283               	bcf	3,5	;RP0=0, select bank0
  2563     0304  1303               	bcf	3,6	;RP1=0, select bank0
  2564     0305  00AE               	movwf	UART_Init@n
  2565     0306  0874               	movf	?___lldiv+1,w
  2566     0307  1803               	skipnc
  2567     0308  3E01               	addlw	1
  2568     0309  3EFF               	addlw	255
  2569     030A  00AF               	movwf	UART_Init@n+1
  2570     030B                     l1353:
  2571                           
  2572                           ;USARTmodl.c: 24:     if (n > 255)
  2573     030B  082F               	movf	UART_Init@n+1,w
  2574     030C  3A80               	xorlw	128
  2575     030D  00FF               	movwf	btemp+1
  2576     030E  3081               	movlw	129
  2577     030F  027F               	subwf	btemp+1,w
  2578     0310  1D03               	skipz
  2579     0311  2B14               	goto	u905
  2580     0312  3000               	movlw	0
  2581     0313  022E               	subwf	UART_Init@n,w
  2582     0314                     u905:
  2583     0314  1C03               	skipc
  2584     0315  2B17               	goto	u901
  2585     0316  2B18               	goto	u900
  2586     0317                     u901:
  2587     0317  2B1E               	goto	l106
  2588     0318                     u900:
  2589     0318                     l1355:
  2590                           
  2591                           ;USARTmodl.c: 25:       n = 255;
  2592     0318  30FF               	movlw	255
  2593     0319  1283               	bcf	3,5	;RP0=0, select bank0
  2594     031A  1303               	bcf	3,6	;RP1=0, select bank0
  2595     031B  00AE               	movwf	UART_Init@n
  2596     031C  3000               	movlw	0
  2597     031D  00AF               	movwf	UART_Init@n+1
  2598     031E                     l106:
  2599                           
  2600                           ;USARTmodl.c: 26:     SPBRG = n;
  2601     031E  1283               	bcf	3,5	;RP0=0, select bank0
  2602     031F  1303               	bcf	3,6	;RP1=0, select bank0
  2603     0320  082E               	movf	UART_Init@n,w
  2604     0321  1683               	bsf	3,5	;RP0=1, select bank1
  2605     0322  1303               	bcf	3,6	;RP1=0, select bank1
  2606     0323  0099               	movwf	25	;volatile
  2607                           
  2608                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  2609     0324  3020               	movlw	32
  2610     0325  0098               	movwf	24	;volatile
  2611                           
  2612                           ;USARTmodl.c: 28:   }
  2613     0326  2B2F               	goto	l107
  2614     0327                     l1357:
  2615                           
  2616                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  2617     0327  1283               	bcf	3,5	;RP0=0, select bank0
  2618     0328  1303               	bcf	3,6	;RP1=0, select bank0
  2619     0329  082E               	movf	UART_Init@n,w
  2620     032A  1683               	bsf	3,5	;RP0=1, select bank1
  2621     032B  1303               	bcf	3,6	;RP1=0, select bank1
  2622     032C  0099               	movwf	25	;volatile
  2623                           
  2624                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  2625     032D  3024               	movlw	36
  2626     032E  0098               	movwf	24	;volatile
  2627     032F                     l107:	
  2628                           ;USARTmodl.c: 34:   }
  2629                           
  2630                           
  2631                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  2632     032F  3090               	movlw	144
  2633     0330  1283               	bcf	3,5	;RP0=0, select bank0
  2634     0331  1303               	bcf	3,6	;RP1=0, select bank0
  2635     0332  0098               	movwf	24	;volatile
  2636     0333                     l108:
  2637     0333  0008               	return
  2638     0334                     __end_of_UART_Init:
  2639                           
  2640                           	psect	text12
  2641     0334                     __ptext12:	
  2642 ;; *************** function ___lldiv *****************
  2643 ;; Defined at:
  2644 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  divisor         4    3[COMMON] unsigned long 
  2647 ;;  dividend        4    7[COMMON] unsigned long 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  quotient        4    1[BANK0 ] unsigned long 
  2650 ;;  counter         1    5[BANK0 ] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  4    3[COMMON] unsigned long 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         8       0       0       0       0
  2661 ;;      Locals:         0       5       0       0       0
  2662 ;;      Temps:          0       1       0       0       0
  2663 ;;      Totals:         8       6       0       0       0
  2664 ;;Total ram usage:       14 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_UART_Init
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674     0334                     ___lldiv:	
  2675                           ;psect for function ___lldiv
  2676                           
  2677     0334                     l1227:	
  2678                           ;incstack = 0
  2679                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2680                           
  2681     0334  3000               	movlw	0
  2682     0335  1283               	bcf	3,5	;RP0=0, select bank0
  2683     0336  1303               	bcf	3,6	;RP1=0, select bank0
  2684     0337  00A4               	movwf	___lldiv@quotient+3
  2685     0338  3000               	movlw	0
  2686     0339  00A3               	movwf	___lldiv@quotient+2
  2687     033A  3000               	movlw	0
  2688     033B  00A2               	movwf	___lldiv@quotient+1
  2689     033C  3000               	movlw	0
  2690     033D  00A1               	movwf	___lldiv@quotient
  2691     033E  0876               	movf	___lldiv@divisor+3,w
  2692     033F  0475               	iorwf	___lldiv@divisor+2,w
  2693     0340  0474               	iorwf	___lldiv@divisor+1,w
  2694     0341  0473               	iorwf	___lldiv@divisor,w
  2695     0342  1903               	skipnz
  2696     0343  2B45               	goto	u641
  2697     0344  2B46               	goto	u640
  2698     0345                     u641:
  2699     0345  2B93               	goto	l1247
  2700     0346                     u640:
  2701     0346                     l1229:
  2702     0346  01A5               	clrf	___lldiv@counter
  2703     0347  0AA5               	incf	___lldiv@counter,f
  2704     0348  2B56               	goto	l1233
  2705     0349                     l1231:
  2706     0349  3001               	movlw	1
  2707     034A  00A0               	movwf	??___lldiv
  2708     034B                     u655:
  2709     034B  1003               	clrc
  2710     034C  0DF3               	rlf	___lldiv@divisor,f
  2711     034D  0DF4               	rlf	___lldiv@divisor+1,f
  2712     034E  0DF5               	rlf	___lldiv@divisor+2,f
  2713     034F  0DF6               	rlf	___lldiv@divisor+3,f
  2714     0350  0BA0               	decfsz	??___lldiv,f
  2715     0351  2B4B               	goto	u655
  2716     0352  3001               	movlw	1
  2717     0353  00A0               	movwf	??___lldiv
  2718     0354  0820               	movf	??___lldiv,w
  2719     0355  07A5               	addwf	___lldiv@counter,f
  2720     0356                     l1233:
  2721     0356  1FF6               	btfss	___lldiv@divisor+3,7
  2722     0357  2B59               	goto	u661
  2723     0358  2B5A               	goto	u660
  2724     0359                     u661:
  2725     0359  2B49               	goto	l1231
  2726     035A                     u660:
  2727     035A                     l1235:
  2728     035A  3001               	movlw	1
  2729     035B  00A0               	movwf	??___lldiv
  2730     035C                     u675:
  2731     035C  1003               	clrc
  2732     035D  0DA1               	rlf	___lldiv@quotient,f
  2733     035E  0DA2               	rlf	___lldiv@quotient+1,f
  2734     035F  0DA3               	rlf	___lldiv@quotient+2,f
  2735     0360  0DA4               	rlf	___lldiv@quotient+3,f
  2736     0361  0BA0               	decfsz	??___lldiv,f
  2737     0362  2B5C               	goto	u675
  2738     0363                     l1237:
  2739     0363  0876               	movf	___lldiv@divisor+3,w
  2740     0364  027A               	subwf	___lldiv@dividend+3,w
  2741     0365  1D03               	skipz
  2742     0366  2B71               	goto	u685
  2743     0367  0875               	movf	___lldiv@divisor+2,w
  2744     0368  0279               	subwf	___lldiv@dividend+2,w
  2745     0369  1D03               	skipz
  2746     036A  2B71               	goto	u685
  2747     036B  0874               	movf	___lldiv@divisor+1,w
  2748     036C  0278               	subwf	___lldiv@dividend+1,w
  2749     036D  1D03               	skipz
  2750     036E  2B71               	goto	u685
  2751     036F  0873               	movf	___lldiv@divisor,w
  2752     0370  0277               	subwf	___lldiv@dividend,w
  2753     0371                     u685:
  2754     0371  1C03               	skipc
  2755     0372  2B74               	goto	u681
  2756     0373  2B75               	goto	u680
  2757     0374                     u681:
  2758     0374  2B84               	goto	l1243
  2759     0375                     u680:
  2760     0375                     l1239:
  2761     0375  0873               	movf	___lldiv@divisor,w
  2762     0376  02F7               	subwf	___lldiv@dividend,f
  2763     0377  0874               	movf	___lldiv@divisor+1,w
  2764     0378  1C03               	skipc
  2765     0379  0F74               	incfsz	___lldiv@divisor+1,w
  2766     037A  02F8               	subwf	___lldiv@dividend+1,f
  2767     037B  0875               	movf	___lldiv@divisor+2,w
  2768     037C  1C03               	skipc
  2769     037D  0F75               	incfsz	___lldiv@divisor+2,w
  2770     037E  02F9               	subwf	___lldiv@dividend+2,f
  2771     037F  0876               	movf	___lldiv@divisor+3,w
  2772     0380  1C03               	skipc
  2773     0381  0F76               	incfsz	___lldiv@divisor+3,w
  2774     0382  02FA               	subwf	___lldiv@dividend+3,f
  2775     0383                     l1241:
  2776     0383  1421               	bsf	___lldiv@quotient,0
  2777     0384                     l1243:
  2778     0384  3001               	movlw	1
  2779     0385                     u695:
  2780     0385  1003               	clrc
  2781     0386  0CF6               	rrf	___lldiv@divisor+3,f
  2782     0387  0CF5               	rrf	___lldiv@divisor+2,f
  2783     0388  0CF4               	rrf	___lldiv@divisor+1,f
  2784     0389  0CF3               	rrf	___lldiv@divisor,f
  2785     038A  3EFF               	addlw	-1
  2786     038B  1D03               	skipz
  2787     038C  2B85               	goto	u695
  2788     038D                     l1245:
  2789     038D  3001               	movlw	1
  2790     038E  02A5               	subwf	___lldiv@counter,f
  2791     038F  1D03               	btfss	3,2
  2792     0390  2B92               	goto	u701
  2793     0391  2B93               	goto	u700
  2794     0392                     u701:
  2795     0392  2B5A               	goto	l1235
  2796     0393                     u700:
  2797     0393                     l1247:
  2798     0393  0824               	movf	___lldiv@quotient+3,w
  2799     0394  00F6               	movwf	?___lldiv+3
  2800     0395  0823               	movf	___lldiv@quotient+2,w
  2801     0396  00F5               	movwf	?___lldiv+2
  2802     0397  0822               	movf	___lldiv@quotient+1,w
  2803     0398  00F4               	movwf	?___lldiv+1
  2804     0399  0821               	movf	___lldiv@quotient,w
  2805     039A  00F3               	movwf	?___lldiv
  2806     039B                     l302:
  2807     039B  0008               	return
  2808     039C                     __end_of___lldiv:
  2809                           
  2810                           	psect	text13
  2811     052E                     __ptext13:	
  2812 ;; *************** function _UART_GetC *****************
  2813 ;; Defined at:
  2814 ;;		line 46 in file "USARTmodl.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      unsigned char 
  2821 ;; Registers used:
  2822 ;;		wreg
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       0       0       0       0
  2829 ;;      Locals:         0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0
  2831 ;;      Totals:         0       0       0       0       0
  2832 ;;Total ram usage:        0 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 1
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842     052E                     _UART_GetC:	
  2843                           ;psect for function _UART_GetC
  2844                           
  2845     052E                     l1467:	
  2846                           ;incstack = 0
  2847                           ; Regs used in _UART_GetC: [wreg]
  2848                           
  2849     052E                     l118:	
  2850                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  2851                           
  2852     052E  1283               	bcf	3,5	;RP0=0, select bank0
  2853     052F  1303               	bcf	3,6	;RP1=0, select bank0
  2854     0530  1E8C               	btfss	12,5	;volatile
  2855     0531  2D33               	goto	u1051
  2856     0532  2D34               	goto	u1050
  2857     0533                     u1051:
  2858     0533  2D2E               	goto	l118
  2859     0534                     u1050:
  2860     0534                     l120:
  2861                           
  2862                           ;USARTmodl.c: 49:   if (OERR)
  2863     0534  1C98               	btfss	24,1	;volatile
  2864     0535  2D37               	goto	u1061
  2865     0536  2D38               	goto	u1060
  2866     0537                     u1061:
  2867     0537  2D3A               	goto	l1471
  2868     0538                     u1060:
  2869     0538                     l1469:
  2870                           
  2871                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  2872     0538  1218               	bcf	24,4	;volatile
  2873                           
  2874                           ;USARTmodl.c: 52:     CREN = 1;
  2875     0539  1618               	bsf	24,4	;volatile
  2876     053A                     l1471:
  2877                           
  2878                           ;USARTmodl.c: 54:   return RCREG;
  2879     053A  081A               	movf	26,w	;volatile
  2880     053B                     l122:
  2881     053B  0008               	return
  2882     053C                     __end_of_UART_GetC:
  2883                           
  2884                           	psect	text14
  2885     0548                     __ptext14:	
  2886 ;; *************** function _UART_Data_Ready *****************
  2887 ;; Defined at:
  2888 ;;		line 41 in file "USARTmodl.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;		None               void
  2895 ;; Registers used:
  2896 ;;		status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         0       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0
  2905 ;;      Totals:         0       0       0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916     0548                     _UART_Data_Ready:	
  2917                           ;psect for function _UART_Data_Ready
  2918                           
  2919     0548                     l1459:	
  2920                           ;incstack = 0
  2921                           ; Regs used in _UART_Data_Ready: [status]
  2922                           
  2923                           
  2924                           ;USARTmodl.c: 43:   return RCIF;
  2925     0548  1283               	bcf	3,5	;RP0=0, select bank0
  2926     0549  1303               	bcf	3,6	;RP1=0, select bank0
  2927     054A  1A8C               	btfsc	12,5	;volatile
  2928     054B  2D4D               	goto	u1041
  2929     054C  2D4E               	goto	u1040
  2930     054D                     u1041:
  2931     054D  2D50               	goto	l1463
  2932     054E                     u1040:
  2933     054E                     l1461:
  2934     054E  1003               	clrc
  2935     054F  2D51               	goto	l115
  2936     0550                     l1463:
  2937     0550  1403               	setc
  2938     0551                     l115:
  2939     0551  0008               	return
  2940     0552                     __end_of_UART_Data_Ready:
  2941                           
  2942                           	psect	text15
  2943     04DD                     __ptext15:	
  2944 ;; *************** function _isr *****************
  2945 ;; Defined at:
  2946 ;;		line 38 in file "Prelab_8.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2960 ;;      Params:         0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0
  2962 ;;      Temps:          3       0       0       0       0
  2963 ;;      Totals:         3       0       0       0       0
  2964 ;;Total ram usage:        3 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		Interrupt level 1
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973     04DD                     _isr:	
  2974                           ;psect for function _isr
  2975                           
  2976     04DD                     i1l1475:
  2977                           
  2978                           ;Prelab_8.c: 40:     if(PIR1bits.ADIF){
  2979     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2980     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2981     04DF  1F0C               	btfss	12,6	;volatile
  2982     04E0  2CE2               	goto	u107_21
  2983     04E1  2CE3               	goto	u107_20
  2984     04E2                     u107_21:
  2985     04E2  2CEF               	goto	i1l55
  2986     04E3                     u107_20:
  2987     04E3                     i1l1477:
  2988                           
  2989                           ;Prelab_8.c: 42:          if (ADCON0bits.CHS ==0)
  2990     04E3  0C1F               	rrf	31,w	;volatile
  2991     04E4  00F0               	movwf	??_isr
  2992     04E5  0C70               	rrf	??_isr,w
  2993     04E6  390F               	andlw	15
  2994     04E7  3A00               	xorlw	0
  2995     04E8  1D03               	skipz
  2996     04E9  2CEB               	goto	u108_21
  2997     04EA  2CEC               	goto	u108_20
  2998     04EB                     u108_21:
  2999     04EB  2CEE               	goto	i1l1481
  3000     04EC                     u108_20:
  3001     04EC                     i1l1479:
  3002                           
  3003                           ;Prelab_8.c: 43:           valpot = ADRESH;
  3004     04EC  081E               	movf	30,w	;volatile
  3005     04ED  00C2               	movwf	_valpot
  3006     04EE                     i1l1481:
  3007                           
  3008                           ;Prelab_8.c: 44:          PIR1bits.ADIF =0;
  3009     04EE  130C               	bcf	12,6	;volatile
  3010     04EF                     i1l55:
  3011     04EF  0872               	movf	??_isr+2,w
  3012     04F0  008A               	movwf	10
  3013     04F1  0E71               	swapf	??_isr+1,w
  3014     04F2  0083               	movwf	3
  3015     04F3  0EFE               	swapf	btemp,f
  3016     04F4  0E7E               	swapf	btemp,w
  3017     04F5  0009               	retfie
  3018     04F6                     __end_of_isr:
  3019     007E                     btemp	set	126	;btemp
  3020     007E                     wtemp0	set	126
  3021                           
  3022                           	psect	intentry
  3023     0004                     __pintentry:	
  3024                           ;incstack = 0
  3025                           ; Regs used in _isr: [wreg+status,2+status,0]
  3026                           
  3027     0004                     interrupt_function:
  3028     007E                     saved_w	set	btemp
  3029     0004  00FE               	movwf	btemp
  3030     0005  0E03               	swapf	3,w
  3031     0006  00F1               	movwf	??_isr+1
  3032     0007  080A               	movf	10,w
  3033     0008  00F2               	movwf	??_isr+2
  3034     0009  120A  118A  2CDD   	ljmp	_isr
  3035                           
  3036                           	psect	idloc
  3037                           
  3038                           ;Config register IDLOC0 @ 0x2000
  3039                           ;	unspecified, using default values
  3040     2000                     	org	8192
  3041     2000  3FFF               	dw	16383
  3042                           
  3043                           ;Config register IDLOC1 @ 0x2001
  3044                           ;	unspecified, using default values
  3045     2001                     	org	8193
  3046     2001  3FFF               	dw	16383
  3047                           
  3048                           ;Config register IDLOC2 @ 0x2002
  3049                           ;	unspecified, using default values
  3050     2002                     	org	8194
  3051     2002  3FFF               	dw	16383
  3052                           
  3053                           ;Config register IDLOC3 @ 0x2003
  3054                           ;	unspecified, using default values
  3055     2003                     	org	8195
  3056     2003  3FFF               	dw	16383
  3057                           
  3058                           	psect	config
  3059                           
  3060                           ;Config register CONFIG1 @ 0x2007
  3061                           ;	Oscillator Selection bits
  3062                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3063                           ;	Watchdog Timer Enable bit
  3064                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3065                           ;	Power-up Timer Enable bit
  3066                           ;	PWRTE = OFF, PWRT disabled
  3067                           ;	RE3/MCLR pin function select bit
  3068                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3069                           ;	Code Protection bit
  3070                           ;	CP = OFF, Program memory code protection is disabled
  3071                           ;	Data Code Protection bit
  3072                           ;	CPD = OFF, Data memory code protection is disabled
  3073                           ;	Brown Out Reset Selection bits
  3074                           ;	BOREN = OFF, BOR disabled
  3075                           ;	Internal External Switchover bit
  3076                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3077                           ;	Fail-Safe Clock Monitor Enabled bit
  3078                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3079                           ;	Low Voltage Programming Enable bit
  3080                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3081                           ;	In-Circuit Debugger Mode bit
  3082                           ;	DEBUG = 0x1, unprogrammed default
  3083     2007                     	org	8199
  3084     2007  38D5               	dw	14549
  3085                           
  3086                           ;Config register CONFIG2 @ 0x2008
  3087                           ;	Brown-out Reset Selection bit
  3088                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3089                           ;	Flash Program Memory Self Write Enable bits
  3090                           ;	WRT = OFF, Write protection off
  3091     2008                     	org	8200
  3092     2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    25
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     34      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@text(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_6(CODE[23]), ROM(CODE[8192]), STR_5(CODE[3]), main@text(BANK0[9]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), message(CODE[15]), STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _preguntas->_UART_Print
    _UART_Print->_UART_PutC
    _UART_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _UART_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    4167
                                             21 BANK0     13    13      0
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                          _preguntas
                              _setup
                            _sprintf
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    1774
                                              6 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              3 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _preguntas                                            0     0      0     796
                         _UART_Print
 ---------------------------------------------------------------------------------
 (2) _UART_Print                                           5     3      2     796
                                              4 COMMON     5     3      2
                          _UART_PutC
                          _uart_read (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_PutC                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     700
                                              6 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
     _uart_read (ARG)
   _UART_PutC
   _preguntas
     _UART_Print
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _uart_read

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Apr 21 17:52:54 2023

                      pc 0002                       l60 0508                       l81 051B  
                     l78 04DC                       fsr 0004      ___wmul@multiplicand 0075  
                    l120 0534                      l122 053B                      l106 031E  
                    l115 0551                      l107 032F                      l108 0333  
                    l125 053D                      l118 052E                      l302 039B  
                    l134 0495                      l128 0547                      l232 0030  
                    l262 019B                      l266 04A2                      l268 04BA  
                    l538 0426                      l548 0462                      l719 052D  
                    u600 049C                      u601 049B                      u700 0393  
                    u701 0392                      u710 03EB                      u630 04B6  
                    u711 03EA                      u631 04B5                      u615 04A3  
                    u640 0346                      u560 0543                      u800 0441  
                    u641 0345                      u561 0542                      u801 0440  
                    u625 04AA                      u570 0495                      u730 03FD  
                    u810 044B                      u571 0494                      u731 03FC  
                    u811 044A                      u660 035A                      u900 0318  
                    u580 0524                      u661 0359                      u901 0317  
                    u725 03EF                      u581 0523                      u750 040E  
                    u830 045E                      u590 052A                      u910 0022  
                    u655 034B                      u751 040D                      u831 045D  
                    u815 0447                      u591 0529                      u911 0021  
                    u680 0375                      u920 0058                      u840 04FC  
                    u681 0374                      u905 0314                      u745 03FE  
                    u825 0452                      u921 0057                      u841 04FB  
                    u770 0422                      u930 0098                      u850 0500  
                    u675 035C                      u771 0421                      u755 040A  
                    u931 0097                      u851 04FF                      u860 02A4  
                    u780 042F                      u940 00E3                      u685 0371  
                    u765 0416                      u781 042E                      u941 00E2  
                    u870 02CA                      u950 00EE                      u695 0385  
                    u871 02C9                      u951 00ED                      u880 02D9  
                    u960 00F9                      u881 02D8                      u865 029F  
                    u961 00F8                      u945 00DF                      u890 02E9  
                    u970 010D                      u795 0433                      u971 010C  
                    u980 0113                      u885 02D5                      u981 0112  
                    u965 00F5                      u990 0128                      u895 02E4  
                    u991 0127                      _isr 04DD                      fsr0 0004  
                    indf 0000                     l1201 051D                     l1203 051E  
                   l1221 04B0                     l1213 0496                     l1205 0524  
                   l1301 04FC                     l1231 0349                     l1223 04B6  
                   l1215 0498                     l1207 052A                     l1303 0500  
                   l1311 0507                     l1241 0383                     l1233 0356  
                   l1321 04C4                     l1217 049C                     l1209 052C  
                   l1305 0505                     l1243 0384                     l1235 035A  
                   l1227 0334                     l1331 04CF                     l1323 04C5  
                   l1315 04BB                     l1251 03E3                     l1219 04A9  
                   l1411 00F9                     l1403 00C8                     l1245 038D  
                   l1237 0363                     l1229 0346                     l1341 04DB  
                   l1333 04D0                     l1325 04C6                     l1317 04BF  
                   l1261 03F9                     l1253 03E5                     l1421 0118  
                   l1413 0105                     l1501 01FA                     l1239 0375  
                   l1247 0393                     l1351 02D9                     l1343 0294  
                   l1191 0543                     l1335 04D4                     l1327 04C7  
                   l1319 04C0                     l1271 041C                     l1263 03FD  
                   l1255 03EB                     l1431 0138                     l1423 011C  
                   l1415 0109                     l1407 00E4                     l1511 0210  
                   l1503 01FD                     l1353 030B                     l1345 02C6  
                   l1193 0463                     l1337 04D7                     l1329 04CD  
                   l1265 040E                     l1257 03EE                     l1273 0422  
                   l1281 0432                     l1441 017E                     l1433 0144  
                   l1417 010D                     l1425 0129                     l1409 00EE  
                   l1361 001C                     l1601 0271                     l1521 024C  
                   l1513 0221                     l1505 0203                     l1355 0318  
                   l1347 02CA                     l1195 0465                     l1339 04DA  
                   l1267 0414                     l1259 03F5                     l1291 0451  
                   l1283 0439                     l1435 0147                     l1427 012F  
                   l1419 0113                     l1603 0043                     l1363 0022  
                   l1443 0187                     l1523 0259                     l1531 0279  
                   l1515 022A                     l1507 0205                     l1461 054E  
                   l1357 0327                     l1349 02CC                     l1189 053D  
                   l1197 047A                     l1269 0415                     l1293 0458  
                   l1285 043D                     l1277 0427                     l1437 0175  
                   l1429 0134                     l1445 0197                     l1605 00B2  
                   l1381 0071                     l1373 0035                     l1365 0027  
                   l1533 0282                     l1525 025E                     l1517 0234  
                   l1509 0207                     l1463 0550                     l1471 053A  
                   l1199 047E                     l1287 0441                     l1279 042F  
                   l1295 045E                     l1439 017A                     l1383 0084  
                   l1391 009E                     l1375 0048                     l1367 002C  
                   l1359 0019                     l1535 028A                     l1519 0243  
                   l1457 0509                     l1289 044B                     l1393 00BA  
                   l1385 0088                     l1377 0058                     l1369 0031  
                   l1529 0263                     l1459 0548                     l1467 052E  
                   l1395 00C2                     l1387 0099                     l1379 005C  
                   l1299 04F6                     l1491 01C3                     l1483 019C  
                   l1469 0538                     l1397 00C6                     l1493 01CC  
                   l1485 01A1                     l1495 01DA                     l1487 01A5  
                   l1497 01E3                     l1489 01B4                     l1499 01F1  
                   ?_isr 0070                     STR_1 03C5                     STR_2 03D9  
                   STR_3 03D9                     STR_4 03DC                     STR_5 03D9  
                   STR_6 03C5                     u1000 012F                     _CREN 00C4  
                   u1001 012E                     u1010 0144                     u1011 0143  
                   u1020 0187                     u1100 0282                     u1021 0186  
                   u1101 0281                     u1030 0197                     u1031 0196  
                   u1040 054E                     u1041 054D                     u1050 0534  
                   u1051 0533                     u1060 0538                     u1061 0537  
                   u1117 01BC                     u1127 01D4                     u1137 01EB  
                   u1090 0203                     u1147 023C                     u1091 0202  
                   u1157 04D2                     _RCIF 0065                     i1l55 04EF  
                   _OERR 00C1                     _TRMT 04C1                     _main 019C  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188          __end_of___lldiv 039C  
        __end_of___lwdiv 0427          __end_of___lwmod 0463                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _TRISA 0085  
                  _TXREG 0019                    _TXSTA 0098              ?_UART_Print 0074  
        __end_of_dpowers 03B6          __end_of_isdigit 052E          __end_of_message 03C5  
                  _setup 04BB                    main@c 0041                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 019C  
        __initialization 000F             __end_of_main 0294                   ??_main 0035  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 i1l1481 04EE                   i1l1475 04DD                   i1l1477 04E3  
                 i1l1479 04EC                   u107_20 04E3                   u107_21 04E2  
                 u108_20 04EC                   u108_21 04EB                   _OSCCON 008F  
      __end_of_UART_GetC 053C        __end_of_UART_Init 0334        __end_of_UART_PutC 0548  
                 ___wmul 0496                ??___lldiv 0020                ??___lwdiv 0077  
              ??___lwmod 0024                   _valpot 0042                ??_isdigit 0073  
                 saved_w 007E                ??_sprintf 0029  __end_of__initialization 0012  
         __pcstackCOMMON 0070            __end_of_setup 04DD             sprintf@width 0032  
                ??_setup 0073               __pbssBANK0 0042               __pmaintext 019C  
                ?___wmul 0073               __pintentry 0004             ??_UART_Print 0076  
             __stringtab 039C       __end_of_UART_Print 0496                  ___lldiv 0334  
                ___lwdiv 03E3                  ___lwmod 0427                  __ptext1 04F6  
                __ptext2 0016                  __ptext3 051C                  __ptext4 0496  
                __ptext5 0427                  __ptext6 03E3                  __ptext7 04BB  
                __ptext8 0509                  __ptext9 0463                  _dpowers 03AC  
                _isdigit 051C                  _message 03B6              UART_Print@i 0078  
         UART_Print@data 0074                  _sprintf 0016     end_of_initialization 0012  
      __end_of_uart_read 0509        __end_of_preguntas 051C          ___lldiv@divisor 0073  
        ___lldiv@counter 0025                _RCSTAbits 0018        ??_UART_Data_Ready 0073  
              _UART_GetC 052E                _UART_Init 0294                _UART_PutC 053C  
     UART_Init@baud_rate 0026           __end_of___wmul 04BB               ?_UART_GetC 0070  
             ?_UART_Init 0026               ?_UART_PutC 0070      start_initialization 000F  
            __end_of_isr 04F6                 ??___wmul 0077                ___latbits 0002  
          __pcstackBANK0 0020              sprintf@flag 002D              sprintf@prec 0030  
       ___lwdiv@dividend 0075                 ?___lldiv 0073                 ?___lwdiv 0073  
               ?___lwmod 0020              ??_UART_GetC 0073              ??_UART_Init 002A  
            ??_UART_PutC 0073                __pstrings 039C                 ?_isdigit 0070  
          UART_PutC@data 0073         ___lwdiv@quotient 0078                 ?_sprintf 0026  
             UART_Init@n 002E        interrupt_function 0004           ___wmul@product 0077  
        _UART_Data_Ready 0548                 _PIE1bits 008C                 _PIR1bits 000C  
              _uart_read 04F6                _preguntas 0509               _ADCON0bits 001F  
            __stringbase 03AB               _ADCON1bits 009F        ___wmul@multiplier 0073  
             ?_uart_read 0070               ?_preguntas 0070       __end_of__stringtab 03AC  
            _isdigit$795 0073               sprintf@val 002E          ___lwdiv@divisor 0073  
        ___lwdiv@counter 007A                 __ptext10 053C                 __ptext11 0294  
               __ptext12 0334                 __ptext13 052E                 __ptext14 0548  
               __ptext15 04DD  __end_of_UART_Data_Ready 0552                 main@text 0038  
             _INTCONbits 000B                 isdigit@c 0074                 intlevel1 0000  
              sprintf@ap 002C                sprintf@sp 0031         ___lwmod@dividend 0022  
       ___lldiv@dividend 0077                stringcode 03A6              ??_uart_read 0073  
            ??_preguntas 0079                 sprintf@c 0034                 sprintf@f 0026  
       ___lldiv@quotient 0021          ___lwmod@divisor 0020          ___lwmod@counter 0025  
               stringdir 03A6                 stringtab 039C               _UART_Print 0463  
       ?_UART_Data_Ready 0070  
